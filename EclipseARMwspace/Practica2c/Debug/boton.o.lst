   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"boton.c"
  21              	.Ltext0:
  22              		.file 1 "../boton.c"
 1911              		.align	2
 1914              	update:
 1915 0000 00000000 		.space	4
 1916              		.global	pausa
 1917              		.align	2
 1920              	pausa:
 1921 0004 00000000 		.space	4
 1922              		.global	resetsymbol
 1923              		.align	2
 1926              	resetsymbol:
 1927 0008 00000000 		.space	4
 1928              		.text
 1929              		.align	2
 1930              		.global	EliminaRebotes
 1932              	EliminaRebotes:
 1933              	.LFB0:
   1:../boton.c    **** /*********************************************************************************************
   2:../boton.c    **** * Fichero:	button.c
   3:../boton.c    **** * Autor:		
   4:../boton.c    **** * Descrip:	Funciones de manejo de los pulsadores (EINT6-7)
   5:../boton.c    **** * Version:	
   6:../boton.c    **** *********************************************************************************************/
   7:../boton.c    **** 
   8:../boton.c    **** /*--- ficheros de cabecera ---*/
   9:../boton.c    **** #include "44b.h"
  10:../boton.c    **** #include "def.h"
  11:../boton.c    **** /*--- variables globales ---*/
  12:../boton.c    **** unsigned int update = 0;
  13:../boton.c    **** unsigned int pausa = 0;
  14:../boton.c    **** unsigned int resetsymbol=0;
  15:../boton.c    **** 
  16:../boton.c    **** /*--- declaracion de funciones ---*/
  17:../boton.c    **** void Eint4567_ISR(void) __attribute__ ((interrupt ("IRQ"))); 
  18:../boton.c    **** //void Eint4567_init(void);
  19:../boton.c    **** 
  20:../boton.c    **** #define INTPND  (*(volatile unsigned *)0x01E00004)
  21:../boton.c    **** 
  22:../boton.c    **** void EliminaRebotes(void) {
 1934              		.loc 1 22 0
 1935              		.cfi_startproc
 1936              		@ Function supports interworking.
 1937              		@ args = 0, pretend = 0, frame = 16
 1938              		@ frame_needed = 1, uses_anonymous_args = 0
 1939 0000 0DC0A0E1 		mov	ip, sp
 1940              	.LCFI0:
 1941              		.cfi_def_cfa_register 12
 1942 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1943 0008 04B04CE2 		sub	fp, ip, #4
 1944              		.cfi_offset 14, -8
 1945              		.cfi_offset 13, -12
 1946              		.cfi_offset 11, -16
 1947              	.LCFI1:
 1948              		.cfi_def_cfa 11, 4
 1949 000c 10D04DE2 		sub	sp, sp, #16
  23:../boton.c    **** 	int i,j,k;
  24:../boton.c    **** 	i=200000;
 1950              		.loc 1 24 0
 1951 0010 44309FE5 		ldr	r3, .L4
 1952 0014 18300BE5 		str	r3, [fp, #-24]
  25:../boton.c    **** 	j=0;
 1953              		.loc 1 25 0
 1954 0018 0030A0E3 		mov	r3, #0
 1955 001c 10300BE5 		str	r3, [fp, #-16]
  26:../boton.c    **** 	while (j!=i){
 1956              		.loc 1 26 0
 1957 0020 060000EA 		b	.L2
 1958              	.L3:
  27:../boton.c    **** 		k=k*j;
 1959              		.loc 1 27 0
 1960 0024 14301BE5 		ldr	r3, [fp, #-20]
 1961 0028 10201BE5 		ldr	r2, [fp, #-16]
 1962 002c 920303E0 		mul	r3, r2, r3
 1963 0030 14300BE5 		str	r3, [fp, #-20]
  28:../boton.c    **** 		j+=1;
 1964              		.loc 1 28 0
 1965 0034 10301BE5 		ldr	r3, [fp, #-16]
 1966 0038 013083E2 		add	r3, r3, #1
 1967 003c 10300BE5 		str	r3, [fp, #-16]
 1968              	.L2:
  26:../boton.c    **** 	while (j!=i){
 1969              		.loc 1 26 0 discriminator 1
 1970 0040 10201BE5 		ldr	r2, [fp, #-16]
 1971 0044 18301BE5 		ldr	r3, [fp, #-24]
 1972 0048 030052E1 		cmp	r2, r3
 1973 004c F4FFFF1A 		bne	.L3
  29:../boton.c    **** 	}
  30:../boton.c    **** }
 1974              		.loc 1 30 0
 1975 0050 0CD04BE2 		sub	sp, fp, #12
 1976 0054 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1977 0058 1EFF2FE1 		bx	lr
 1978              	.L5:
 1979              		.align	2
 1980              	.L4:
 1981 005c 400D0300 		.word	200000
 1982              		.cfi_endproc
 1983              	.LFE0:
 1985              		.align	2
 1986              		.global	Eint4567_ISR
 1988              	Eint4567_ISR:
 1989              	.LFB1:
  31:../boton.c    **** /*--- codigo de funciones ---*/
  32:../boton.c    **** /*void Eint4567_init(void)
  33:../boton.c    **** {
  34:../boton.c    **** /*TAREA 1a*/
  35:../boton.c    **** 	/* Configuracion del controlador de interrupciones */
  36:../boton.c    **** 	/*rI_ISPC=0xFFFFFFFF	;	   // Borra INTPND
  37:../boton.c    **** 	rEXTINTPND = 0xf; 		   // Borra EXTINTPND
  38:../boton.c    **** 	rINTMOD=0x0;	   // Configura las lineas como de tipo IRQ mediante rINTMOD
  39:../boton.c    **** 	rINTCON  =0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no) mediante rINTCON
  40:../boton.c    **** 	rINTMSK = ~(BIT_GLOBAL|BIT_EINT4567); // Emascara todas las lineas excepto eint4567 y el bit globa
  41:../boton.c    **** 		
  42:../boton.c    **** 	/* Establece la rutina de servicio para Eint4567 */
  43:../boton.c    ****     //pISR_EINT4567 = (int)Eint4567_ISR;
  44:../boton.c    ****     
  45:../boton.c    ****     /* Configuracion del puerto G */
  46:../boton.c    ****    /* rPCONG  = 0xffff;        		// Establece la funcion de los pines (EINT0-7)
  47:../boton.c    **** 	rPUPG   = 0x0;                  // Habilita el "pull up" del puerto	    
  48:../boton.c    **** 	rEXTINT = rEXTINT|0x22222222;   // Configura las lineas de int. como de flanco de bajada	
  49:../boton.c    **** 
  50:../boton.c    ****     /* Por precaucion, se vuelven a borrar los bits de INTPND y EXTINTPND */
  51:../boton.c    **** 	//rI_ISPC=0xFFFFFFFF	;	   // Borra INTPND
  52:../boton.c    ****  	//rEXTINTPND = 0xf;	   // Borra EXTINTPND
  53:../boton.c    **** /*fin TAREA 1a*/  
  54:../boton.c    **** //}
  55:../boton.c    **** 
  56:../boton.c    **** void Eint4567_ISR(void)
  57:../boton.c    **** {          
 1990              		.loc 1 57 0
 1991              		.cfi_startproc
 1992              		@ Interrupt Service Routine.
 1993              		@ args = 0, pretend = 0, frame = 8
 1994              		@ frame_needed = 1, uses_anonymous_args = 0
 1995 0060 04C02DE5 		str	ip, [sp, #-4]!
 1996 0064 0DC0A0E1 		mov	ip, sp
 1997              	.LCFI2:
 1998              		.cfi_def_cfa_register 12
 1999 0068 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2000 006c 04B04CE2 		sub	fp, ip, #4
 2001              		.cfi_offset 14, -8
 2002              		.cfi_offset 13, -12
 2003              		.cfi_offset 11, -16
 2004              		.cfi_offset 3, -20
 2005              		.cfi_offset 2, -24
 2006              		.cfi_offset 1, -28
 2007              		.cfi_offset 0, -32
 2008              	.LCFI3:
 2009              		.cfi_def_cfa 11, 4
 2010 0070 08D04DE2 		sub	sp, sp, #8
  58:../boton.c    ****     int which_int;
  59:../boton.c    **** 	/*TAREA 1b*/
  60:../boton.c    ****     /* Idenficiar la interrupcion */
  61:../boton.c    **** 	if(rI_ISPR == 0x00200000 ){
 2011              		.loc 1 61 0
 2012 0074 E8309FE5 		ldr	r3, .L14
 2013 0078 003093E5 		ldr	r3, [r3, #0]
 2014 007c 020653E3 		cmp	r3, #2097152
 2015 0080 3300001A 		bne	.L6
  62:../boton.c    **** 		which_int = rEXTINTPND&0xC;
 2016              		.loc 1 62 0
 2017 0084 DC309FE5 		ldr	r3, .L14+4
 2018 0088 003093E5 		ldr	r3, [r3, #0]
 2019 008c 0C3003E2 		and	r3, r3, #12
 2020 0090 20300BE5 		str	r3, [fp, #-32]
  63:../boton.c    **** 
  64:../boton.c    **** 		/* Codigo para eliminar rebotes*/
  65:../boton.c    **** 		EliminaRebotes();
 2021              		.loc 1 65 0
 2022 0094 FEFFFFEB 		bl	EliminaRebotes
  66:../boton.c    **** 		/* Reflejar en update el sentido de la actualizacion 
  67:../boton.c    **** 		   Nota: para solucionar los problemas de rebotes en el pulsador 
  68:../boton.c    **** 				 solo se modifica update cuando se encuentra a cero */ 
  69:../boton.c    **** 
  70:../boton.c    **** 		   switch (which_int) {
 2023              		.loc 1 70 0
 2024 0098 20301BE5 		ldr	r3, [fp, #-32]
 2025 009c 040053E3 		cmp	r3, #4
 2026 00a0 0200000A 		beq	.L9
 2027 00a4 080053E3 		cmp	r3, #8
 2028 00a8 1A00000A 		beq	.L10
  71:../boton.c    **** 			case 4:
  72:../boton.c    **** 				if (pausa == 1){
  73:../boton.c    **** 					pausa = 0;
  74:../boton.c    **** 					rINTMSK &= ~(BIT_GLOBAL|BIT_TIMER0);
  75:../boton.c    **** 					//Habilitamos
  76:../boton.c    **** 				}else{
  77:../boton.c    **** 					pausa = 1;
  78:../boton.c    **** 					rINTMSK |= 0x2000;
  79:../boton.c    **** 				}
  80:../boton.c    **** 
  81:../boton.c    **** 				update = 1; // actualizar al simbolo siguiente
  82:../boton.c    **** 				break;
  83:../boton.c    **** 			case 8:
  84:../boton.c    **** 				resetsymbol=1;
  85:../boton.c    **** 				update = 5; // actualizar al simbolo anterior
  86:../boton.c    **** 				break;
  87:../boton.c    **** 			default:
  88:../boton.c    **** 				break;
 2029              		.loc 1 88 0
 2030 00ac 200000EA 		b	.L13
 2031              	.L9:
  72:../boton.c    **** 				if (pausa == 1){
 2032              		.loc 1 72 0
 2033 00b0 B4309FE5 		ldr	r3, .L14+8
 2034 00b4 003093E5 		ldr	r3, [r3, #0]
 2035 00b8 010053E3 		cmp	r3, #1
 2036 00bc 0900001A 		bne	.L11
  73:../boton.c    **** 					pausa = 0;
 2037              		.loc 1 73 0
 2038 00c0 A4309FE5 		ldr	r3, .L14+8
 2039 00c4 0020A0E3 		mov	r2, #0
 2040 00c8 002083E5 		str	r2, [r3, #0]
  74:../boton.c    **** 					rINTMSK &= ~(BIT_GLOBAL|BIT_TIMER0);
 2041              		.loc 1 74 0
 2042 00cc 9C209FE5 		ldr	r2, .L14+12
 2043 00d0 98309FE5 		ldr	r3, .L14+12
 2044 00d4 003093E5 		ldr	r3, [r3, #0]
 2045 00d8 0133C3E3 		bic	r3, r3, #67108864
 2046 00dc 023AC3E3 		bic	r3, r3, #8192
 2047 00e0 003082E5 		str	r3, [r2, #0]
 2048 00e4 070000EA 		b	.L12
 2049              	.L11:
  77:../boton.c    **** 					pausa = 1;
 2050              		.loc 1 77 0
 2051 00e8 7C309FE5 		ldr	r3, .L14+8
 2052 00ec 0120A0E3 		mov	r2, #1
 2053 00f0 002083E5 		str	r2, [r3, #0]
  78:../boton.c    **** 					rINTMSK |= 0x2000;
 2054              		.loc 1 78 0
 2055 00f4 74309FE5 		ldr	r3, .L14+12
 2056 00f8 70209FE5 		ldr	r2, .L14+12
 2057 00fc 002092E5 		ldr	r2, [r2, #0]
 2058 0100 022A82E3 		orr	r2, r2, #8192
 2059 0104 002083E5 		str	r2, [r3, #0]
 2060              	.L12:
  81:../boton.c    **** 				update = 1; // actualizar al simbolo siguiente
 2061              		.loc 1 81 0
 2062 0108 64309FE5 		ldr	r3, .L14+16
 2063 010c 0120A0E3 		mov	r2, #1
 2064 0110 002083E5 		str	r2, [r3, #0]
  82:../boton.c    **** 				break;
 2065              		.loc 1 82 0
 2066 0114 060000EA 		b	.L13
 2067              	.L10:
  84:../boton.c    **** 				resetsymbol=1;
 2068              		.loc 1 84 0
 2069 0118 58309FE5 		ldr	r3, .L14+20
 2070 011c 0120A0E3 		mov	r2, #1
 2071 0120 002083E5 		str	r2, [r3, #0]
  85:../boton.c    **** 				update = 5; // actualizar al simbolo anterior
 2072              		.loc 1 85 0
 2073 0124 48309FE5 		ldr	r3, .L14+16
 2074 0128 0520A0E3 		mov	r2, #5
 2075 012c 002083E5 		str	r2, [r3, #0]
  86:../boton.c    **** 				break;
 2076              		.loc 1 86 0
 2077 0130 0000A0E1 		mov	r0, r0	@ nop
 2078              	.L13:
  89:../boton.c    **** 		   } 
  90:../boton.c    **** 		
  91:../boton.c    **** 		/* Finalizar ISR */    
  92:../boton.c    **** 		   rEXTINTPND = 0xf;				// borra los bits en EXTINTPND
 2079              		.loc 1 92 0
 2080 0134 2C309FE5 		ldr	r3, .L14+4
 2081 0138 0F20A0E3 		mov	r2, #15
 2082 013c 002083E5 		str	r2, [r3, #0]
  93:../boton.c    **** 		   rI_ISPC   |= BIT_EINT4567;		// borra el bit pendiente en INTPND
 2083              		.loc 1 93 0
 2084 0140 34309FE5 		ldr	r3, .L14+24
 2085 0144 30209FE5 		ldr	r2, .L14+24
 2086 0148 002092E5 		ldr	r2, [r2, #0]
 2087 014c 022682E3 		orr	r2, r2, #2097152
 2088 0150 002083E5 		str	r2, [r3, #0]
 2089              	.L6:
  94:../boton.c    **** 		/*fin TAREA 1b*/	
  95:../boton.c    **** 	}
  96:../boton.c    **** }
 2090              		.loc 1 96 0
 2091 0154 1CD04BE2 		sub	sp, fp, #28
 2092 0158 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2093 015c 04C09DE4 		ldmfd	sp!, {ip}
 2094 0160 04F05EE2 		subs	pc, lr, #4
 2095              	.L15:
 2096              		.align	2
 2097              	.L14:
 2098 0164 2000E001 		.word	31457312
 2099 0168 5400D201 		.word	30539860
 2100 016c 00000000 		.word	pausa
 2101 0170 0C00E001 		.word	31457292
 2102 0174 00000000 		.word	update
 2103 0178 00000000 		.word	resetsymbol
 2104 017c 2400E001 		.word	31457316
 2105              		.cfi_endproc
 2106              	.LFE1:
 2108              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 boton.c
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1914   .bss:00000000 update
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1911   .bss:00000000 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1920   .bss:00000004 pausa
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1926   .bss:00000008 resetsymbol
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1929   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1932   .text:00000000 EliminaRebotes
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1981   .text:0000005c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1985   .text:00000060 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:1988   .text:00000060 Eint4567_ISR
C:\Users\USUARI~1\AppData\Local\Temp\ccIwkEXX.s:2098   .text:00000164 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

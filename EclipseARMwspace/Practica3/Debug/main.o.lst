   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 1896              		.align	2
 1899              	symbol:
 1900 0000 0C000000 		.word	12
 1901              		.text
 1902              		.align	2
 1903              		.global	guardaClave
 1905              	guardaClave:
 1906              	.LFB0:
   1:../main.c     ****     /*********************************************************************************************
   2:../main.c     **** * Fichero:	main.c
   3:../main.c     **** * Autor:	
   4:../main.c     **** * Descrip:	punto de entrada de C
   5:../main.c     **** * Version:	<P4-ARM.8seg-button>
   6:../main.c     **** *********************************************************************************************/
   7:../main.c     **** 
   8:../main.c     **** /*--- ficheros de cabecera ---*/
   9:../main.c     **** #include "44blib.h"
  10:../main.c     **** #include "44b.h"
  11:../main.c     **** #include "keyboard.h"
  12:../main.c     **** #include "buffer.h"
  13:../main.c     **** #include "timer.h"
  14:../main.c     **** 
  15:../main.c     **** /*--- variables globales ---*/
  16:../main.c     **** int symbol = 12;
  17:../main.c     **** 
  18:../main.c     **** extern int key;
  19:../main.c     **** extern int cuentaClave;
  20:../main.c     **** extern int cuentaIntento;
  21:../main.c     **** extern int cuentaAcierto;
  22:../main.c     **** extern int posicion;
  23:../main.c     **** /*--- funciones externas ---*/
  24:../main.c     **** extern void init_keyboard(void);
  25:../main.c     **** extern void D8Led_symbol(int value);
  26:../main.c     **** extern void TIMER_init(void);
  27:../main.c     **** /*--- codigo de las funciones ---*/
  28:../main.c     **** void guardaClave(){
 1907              		.loc 1 28 0
 1908              		.cfi_startproc
 1909              		@ Function supports interworking.
 1910              		@ args = 0, pretend = 0, frame = 0
 1911              		@ frame_needed = 1, uses_anonymous_args = 0
 1912 0000 0DC0A0E1 		mov	ip, sp
 1913              	.LCFI0:
 1914              		.cfi_def_cfa_register 12
 1915 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1916 0008 04B04CE2 		sub	fp, ip, #4
 1917              		.cfi_offset 14, -8
 1918              		.cfi_offset 13, -12
 1919              		.cfi_offset 11, -16
 1920              	.LCFI1:
 1921              		.cfi_def_cfa 11, 4
  29:../main.c     **** 	D8Led_symbol(symbol);  	/* muestra el simbolo inicial en el display */
 1922              		.loc 1 29 0
 1923 000c 44309FE5 		ldr	r3, .L3
 1924 0010 003093E5 		ldr	r3, [r3, #0]
 1925 0014 0300A0E1 		mov	r0, r3
 1926 0018 FEFFFFEB 		bl	D8Led_symbol
  30:../main.c     **** 	rINTMSK |= BIT_TIMER1; // Enmascara el timer
 1927              		.loc 1 30 0
 1928 001c 38309FE5 		ldr	r3, .L3+4
 1929 0020 34209FE5 		ldr	r2, .L3+4
 1930 0024 002092E5 		ldr	r2, [r2, #0]
 1931 0028 012A82E3 		orr	r2, r2, #4096
 1932 002c 002083E5 		str	r2, [r3, #0]
  31:../main.c     **** 	modoClave(1); //Activa la lectura de clave
 1933              		.loc 1 31 0
 1934 0030 0100A0E3 		mov	r0, #1
 1935 0034 FEFFFFEB 		bl	modoClave
  32:../main.c     **** 	while (key != 15){
 1936              		.loc 1 32 0
 1937 0038 0000A0E1 		mov	r0, r0	@ nop
 1938              	.L2:
 1939              		.loc 1 32 0 is_stmt 0 discriminator 1
 1940 003c 1C309FE5 		ldr	r3, .L3+8
 1941 0040 003093E5 		ldr	r3, [r3, #0]
 1942 0044 0F0053E3 		cmp	r3, #15
 1943 0048 FBFFFF1A 		bne	.L2
  33:../main.c     **** 
  34:../main.c     **** 	}
  35:../main.c     **** }
 1944              		.loc 1 35 0 is_stmt 1
 1945 004c 0CD04BE2 		sub	sp, fp, #12
 1946 0050 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1947 0054 1EFF2FE1 		bx	lr
 1948              	.L4:
 1949              		.align	2
 1950              	.L3:
 1951 0058 00000000 		.word	symbol
 1952 005c 0C00E001 		.word	31457292
 1953 0060 00000000 		.word	key
 1954              		.cfi_endproc
 1955              	.LFE0:
 1957              		.align	2
 1958              		.global	muestraClave
 1960              	muestraClave:
 1961              	.LFB1:
  36:../main.c     **** 
  37:../main.c     **** void muestraClave(){
 1962              		.loc 1 37 0
 1963              		.cfi_startproc
 1964              		@ Function supports interworking.
 1965              		@ args = 0, pretend = 0, frame = 0
 1966              		@ frame_needed = 1, uses_anonymous_args = 0
 1967 0064 0DC0A0E1 		mov	ip, sp
 1968              	.LCFI2:
 1969              		.cfi_def_cfa_register 12
 1970 0068 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1971 006c 04B04CE2 		sub	fp, ip, #4
 1972              		.cfi_offset 14, -8
 1973              		.cfi_offset 13, -12
 1974              		.cfi_offset 11, -16
 1975              	.LCFI3:
 1976              		.cfi_def_cfa 11, 4
  38:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 1977              		.loc 1 38 0
 1978 0070 48309FE5 		ldr	r3, .L7
 1979 0074 44209FE5 		ldr	r2, .L7
 1980 0078 002092E5 		ldr	r2, [r2, #0]
 1981 007c 012AC2E3 		bic	r2, r2, #4096
 1982 0080 002083E5 		str	r2, [r3, #0]
  39:../main.c     **** 	rINTMSK |= BIT_EINT1;
 1983              		.loc 1 39 0
 1984 0084 34309FE5 		ldr	r3, .L7
 1985 0088 30209FE5 		ldr	r2, .L7
 1986 008c 002092E5 		ldr	r2, [r2, #0]
 1987 0090 012482E3 		orr	r2, r2, #16777216
 1988 0094 002083E5 		str	r2, [r3, #0]
  40:../main.c     **** 	modoTimer(0); //Modo muestra de clave
 1989              		.loc 1 40 0
 1990 0098 0000A0E3 		mov	r0, #0
 1991 009c FEFFFFEB 		bl	modoTimer
  41:../main.c     **** 	while(cuentaClave <= 20){
 1992              		.loc 1 41 0
 1993 00a0 0000A0E1 		mov	r0, r0	@ nop
 1994              	.L6:
 1995              		.loc 1 41 0 is_stmt 0 discriminator 1
 1996 00a4 18309FE5 		ldr	r3, .L7+4
 1997 00a8 003093E5 		ldr	r3, [r3, #0]
 1998 00ac 140053E3 		cmp	r3, #20
 1999 00b0 FBFFFFDA 		ble	.L6
  42:../main.c     **** 
  43:../main.c     **** 	}
  44:../main.c     **** }
 2000              		.loc 1 44 0 is_stmt 1
 2001 00b4 0CD04BE2 		sub	sp, fp, #12
 2002 00b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2003 00bc 1EFF2FE1 		bx	lr
 2004              	.L8:
 2005              		.align	2
 2006              	.L7:
 2007 00c0 0C00E001 		.word	31457292
 2008 00c4 00000000 		.word	cuentaClave
 2009              		.cfi_endproc
 2010              	.LFE1:
 2012              		.align	2
 2013              		.global	leeIntento
 2015              	leeIntento:
 2016              	.LFB2:
  45:../main.c     **** void leeIntento(){
 2017              		.loc 1 45 0
 2018              		.cfi_startproc
 2019              		@ Function supports interworking.
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022 00c8 0DC0A0E1 		mov	ip, sp
 2023              	.LCFI4:
 2024              		.cfi_def_cfa_register 12
 2025 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2026 00d0 04B04CE2 		sub	fp, ip, #4
 2027              		.cfi_offset 14, -8
 2028              		.cfi_offset 13, -12
 2029              		.cfi_offset 11, -16
 2030              	.LCFI5:
 2031              		.cfi_def_cfa 11, 4
  46:../main.c     **** 	resetIntento();
 2032              		.loc 1 46 0
 2033 00d4 FEFFFFEB 		bl	resetIntento
  47:../main.c     **** 	modoClave(0); //Activa la lectura de intento
 2034              		.loc 1 47 0
 2035 00d8 0000A0E3 		mov	r0, #0
 2036 00dc FEFFFFEB 		bl	modoClave
  48:../main.c     **** 	D8Led_symbol(15);
 2037              		.loc 1 48 0
 2038 00e0 0F00A0E3 		mov	r0, #15
 2039 00e4 FEFFFFEB 		bl	D8Led_symbol
  49:../main.c     **** 	rINTMSK |= BIT_TIMER1; // Enmascara el timer
 2040              		.loc 1 49 0
 2041 00e8 4C309FE5 		ldr	r3, .L11
 2042 00ec 48209FE5 		ldr	r2, .L11
 2043 00f0 002092E5 		ldr	r2, [r2, #0]
 2044 00f4 012A82E3 		orr	r2, r2, #4096
 2045 00f8 002083E5 		str	r2, [r3, #0]
  50:../main.c     **** 	rINTMSK &= ~BIT_EINT1; //Habilita el keyboard
 2046              		.loc 1 50 0
 2047 00fc 38309FE5 		ldr	r3, .L11
 2048 0100 34209FE5 		ldr	r2, .L11
 2049 0104 002092E5 		ldr	r2, [r2, #0]
 2050 0108 0124C2E3 		bic	r2, r2, #16777216
 2051 010c 002083E5 		str	r2, [r3, #0]
  51:../main.c     **** 	key = -1;
 2052              		.loc 1 51 0
 2053 0110 28309FE5 		ldr	r3, .L11+4
 2054 0114 0020E0E3 		mvn	r2, #0
 2055 0118 002083E5 		str	r2, [r3, #0]
  52:../main.c     **** 	while (key != 15){
 2056              		.loc 1 52 0
 2057 011c 0000A0E1 		mov	r0, r0	@ nop
 2058              	.L10:
 2059              		.loc 1 52 0 is_stmt 0 discriminator 1
 2060 0120 18309FE5 		ldr	r3, .L11+4
 2061 0124 003093E5 		ldr	r3, [r3, #0]
 2062 0128 0F0053E3 		cmp	r3, #15
 2063 012c FBFFFF1A 		bne	.L10
  53:../main.c     **** 
  54:../main.c     **** 	}
  55:../main.c     **** }
 2064              		.loc 1 55 0 is_stmt 1
 2065 0130 0CD04BE2 		sub	sp, fp, #12
 2066 0134 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2067 0138 1EFF2FE1 		bx	lr
 2068              	.L12:
 2069              		.align	2
 2070              	.L11:
 2071 013c 0C00E001 		.word	31457292
 2072 0140 00000000 		.word	key
 2073              		.cfi_endproc
 2074              	.LFE2:
 2076              		.align	2
 2077              		.global	muestraIntento
 2079              	muestraIntento:
 2080              	.LFB3:
  56:../main.c     **** void muestraIntento(){
 2081              		.loc 1 56 0
 2082              		.cfi_startproc
 2083              		@ Function supports interworking.
 2084              		@ args = 0, pretend = 0, frame = 0
 2085              		@ frame_needed = 1, uses_anonymous_args = 0
 2086 0144 0DC0A0E1 		mov	ip, sp
 2087              	.LCFI6:
 2088              		.cfi_def_cfa_register 12
 2089 0148 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2090 014c 04B04CE2 		sub	fp, ip, #4
 2091              		.cfi_offset 14, -8
 2092              		.cfi_offset 13, -12
 2093              		.cfi_offset 11, -16
 2094              	.LCFI7:
 2095              		.cfi_def_cfa 11, 4
  57:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 2096              		.loc 1 57 0
 2097 0150 60309FE5 		ldr	r3, .L15
 2098 0154 5C209FE5 		ldr	r2, .L15
 2099 0158 002092E5 		ldr	r2, [r2, #0]
 2100 015c 012AC2E3 		bic	r2, r2, #4096
 2101 0160 002083E5 		str	r2, [r3, #0]
  58:../main.c     **** 	rINTMSK |= BIT_EINT1;
 2102              		.loc 1 58 0
 2103 0164 4C309FE5 		ldr	r3, .L15
 2104 0168 48209FE5 		ldr	r2, .L15
 2105 016c 002092E5 		ldr	r2, [r2, #0]
 2106 0170 012482E3 		orr	r2, r2, #16777216
 2107 0174 002083E5 		str	r2, [r3, #0]
  59:../main.c     **** 	modoTimer(1); //Modo muestra de intento
 2108              		.loc 1 59 0
 2109 0178 0100A0E3 		mov	r0, #1
 2110 017c FEFFFFEB 		bl	modoTimer
  60:../main.c     **** 	cuentaIntento = 0;
 2111              		.loc 1 60 0
 2112 0180 34309FE5 		ldr	r3, .L15+4
 2113 0184 0020A0E3 		mov	r2, #0
 2114 0188 002083E5 		str	r2, [r3, #0]
  61:../main.c     **** 	posicion = 0;
 2115              		.loc 1 61 0
 2116 018c 2C309FE5 		ldr	r3, .L15+8
 2117 0190 0020A0E3 		mov	r2, #0
 2118 0194 002083E5 		str	r2, [r3, #0]
  62:../main.c     **** 	while(cuentaIntento <= 20){
 2119              		.loc 1 62 0
 2120 0198 0000A0E1 		mov	r0, r0	@ nop
 2121              	.L14:
 2122              		.loc 1 62 0 is_stmt 0 discriminator 1
 2123 019c 18309FE5 		ldr	r3, .L15+4
 2124 01a0 003093E5 		ldr	r3, [r3, #0]
 2125 01a4 140053E3 		cmp	r3, #20
 2126 01a8 FBFFFFDA 		ble	.L14
  63:../main.c     **** 
  64:../main.c     **** 	}
  65:../main.c     **** }
 2127              		.loc 1 65 0 is_stmt 1
 2128 01ac 0CD04BE2 		sub	sp, fp, #12
 2129 01b0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2130 01b4 1EFF2FE1 		bx	lr
 2131              	.L16:
 2132              		.align	2
 2133              	.L15:
 2134 01b8 0C00E001 		.word	31457292
 2135 01bc 00000000 		.word	cuentaIntento
 2136 01c0 00000000 		.word	posicion
 2137              		.cfi_endproc
 2138              	.LFE3:
 2140              		.align	2
 2141              		.global	compruebaAcierto
 2143              	compruebaAcierto:
 2144              	.LFB4:
  66:../main.c     **** void compruebaAcierto(){
 2145              		.loc 1 66 0
 2146              		.cfi_startproc
 2147              		@ Function supports interworking.
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 1, uses_anonymous_args = 0
 2150 01c4 0DC0A0E1 		mov	ip, sp
 2151              	.LCFI8:
 2152              		.cfi_def_cfa_register 12
 2153 01c8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2154 01cc 04B04CE2 		sub	fp, ip, #4
 2155              		.cfi_offset 14, -8
 2156              		.cfi_offset 13, -12
 2157              		.cfi_offset 11, -16
 2158              	.LCFI9:
 2159              		.cfi_def_cfa 11, 4
  67:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 2160              		.loc 1 67 0
 2161 01d0 78309FE5 		ldr	r3, .L21
 2162 01d4 74209FE5 		ldr	r2, .L21
 2163 01d8 002092E5 		ldr	r2, [r2, #0]
 2164 01dc 012AC2E3 		bic	r2, r2, #4096
 2165 01e0 002083E5 		str	r2, [r3, #0]
  68:../main.c     **** 	rINTMSK |= BIT_EINT1;
 2166              		.loc 1 68 0
 2167 01e4 64309FE5 		ldr	r3, .L21
 2168 01e8 60209FE5 		ldr	r2, .L21
 2169 01ec 002092E5 		ldr	r2, [r2, #0]
 2170 01f0 012482E3 		orr	r2, r2, #16777216
 2171 01f4 002083E5 		str	r2, [r3, #0]
  69:../main.c     **** 	modoTimer(2); //Modo muestra de clave
 2172              		.loc 1 69 0
 2173 01f8 0200A0E3 		mov	r0, #2
 2174 01fc FEFFFFEB 		bl	modoTimer
  70:../main.c     **** 	if (comparar() == 1)
 2175              		.loc 1 70 0
 2176 0200 FEFFFFEB 		bl	comparar
 2177 0204 0030A0E1 		mov	r3, r0
 2178 0208 010053E3 		cmp	r3, #1
 2179 020c 0200001A 		bne	.L18
  71:../main.c     **** 		D8Led_symbol(10);
 2180              		.loc 1 71 0
 2181 0210 0A00A0E3 		mov	r0, #10
 2182 0214 FEFFFFEB 		bl	D8Led_symbol
 2183 0218 010000EA 		b	.L19
 2184              	.L18:
  72:../main.c     **** 	else
  73:../main.c     **** 		D8Led_symbol(14);
 2185              		.loc 1 73 0
 2186 021c 0E00A0E3 		mov	r0, #14
 2187 0220 FEFFFFEB 		bl	D8Led_symbol
 2188              	.L19:
  74:../main.c     **** 	cuentaAcierto = 0;
 2189              		.loc 1 74 0
 2190 0224 28309FE5 		ldr	r3, .L21+4
 2191 0228 0020A0E3 		mov	r2, #0
 2192 022c 002083E5 		str	r2, [r3, #0]
  75:../main.c     **** 	while(cuentaAcierto <= 10){
 2193              		.loc 1 75 0
 2194 0230 0000A0E1 		mov	r0, r0	@ nop
 2195              	.L20:
 2196              		.loc 1 75 0 is_stmt 0 discriminator 1
 2197 0234 18309FE5 		ldr	r3, .L21+4
 2198 0238 003093E5 		ldr	r3, [r3, #0]
 2199 023c 0A0053E3 		cmp	r3, #10
 2200 0240 FBFFFFDA 		ble	.L20
  76:../main.c     **** 
  77:../main.c     **** 	}
  78:../main.c     **** }
 2201              		.loc 1 78 0 is_stmt 1
 2202 0244 0CD04BE2 		sub	sp, fp, #12
 2203 0248 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2204 024c 1EFF2FE1 		bx	lr
 2205              	.L22:
 2206              		.align	2
 2207              	.L21:
 2208 0250 0C00E001 		.word	31457292
 2209 0254 00000000 		.word	cuentaAcierto
 2210              		.cfi_endproc
 2211              	.LFE4:
 2213              		.align	2
 2214              		.global	main
 2216              	main:
 2217              	.LFB5:
  79:../main.c     **** int main(void)
  80:../main.c     **** {	
 2218              		.loc 1 80 0
 2219              		.cfi_startproc
 2220              		@ Function supports interworking.
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 1, uses_anonymous_args = 0
 2223 0258 0DC0A0E1 		mov	ip, sp
 2224              	.LCFI10:
 2225              		.cfi_def_cfa_register 12
 2226 025c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2227 0260 04B04CE2 		sub	fp, ip, #4
 2228              		.cfi_offset 14, -8
 2229              		.cfi_offset 13, -12
 2230              		.cfi_offset 11, -16
 2231              	.LCFI11:
 2232              		.cfi_def_cfa 11, 4
  81:../main.c     **** 
  82:../main.c     ****     sys_init();     		/* Inicializacion de la placa, interrupciones, puertos y UART */
 2233              		.loc 1 82 0
 2234 0264 FEFFFFEB 		bl	sys_init
  83:../main.c     ****     init_keyboard(); 	    /* Inicializacion de EINT6/7 y del puerto G */
 2235              		.loc 1 83 0
 2236 0268 FEFFFFEB 		bl	init_keyboard
  84:../main.c     **** 	TIMER_init();	   		// Inicializacion del temporizador
 2237              		.loc 1 84 0
 2238 026c FEFFFFEB 		bl	TIMER_init
  85:../main.c     **** 
  86:../main.c     **** 	guardaClave();
 2239              		.loc 1 86 0
 2240 0270 FEFFFFEB 		bl	guardaClave
  87:../main.c     **** 	muestraClave();
 2241              		.loc 1 87 0
 2242 0274 FEFFFFEB 		bl	muestraClave
 2243              	.L24:
  88:../main.c     **** 
  89:../main.c     **** 	while(1){
  90:../main.c     **** 		leeIntento();
 2244              		.loc 1 90 0 discriminator 1
 2245 0278 FEFFFFEB 		bl	leeIntento
  91:../main.c     **** 		muestraIntento();
 2246              		.loc 1 91 0 discriminator 1
 2247 027c FEFFFFEB 		bl	muestraIntento
  92:../main.c     **** 		compruebaAcierto();
 2248              		.loc 1 92 0 discriminator 1
 2249 0280 FEFFFFEB 		bl	compruebaAcierto
  93:../main.c     **** 	}
 2250              		.loc 1 93 0 discriminator 1
 2251 0284 FBFFFFEA 		b	.L24
 2252              		.cfi_endproc
 2253              	.LFE5:
 2255              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:1899   .data:00000000 symbol
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:1896   .data:00000000 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:1902   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:1905   .text:00000000 guardaClave
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:1951   .text:00000058 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:1957   .text:00000064 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:1960   .text:00000064 muestraClave
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2007   .text:000000c0 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2012   .text:000000c8 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2015   .text:000000c8 leeIntento
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2071   .text:0000013c $d
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2076   .text:00000144 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2079   .text:00000144 muestraIntento
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2134   .text:000001b8 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2140   .text:000001c4 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2143   .text:000001c4 compruebaAcierto
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2208   .text:00000250 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2213   .text:00000258 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc74zWZT.s:2216   .text:00000258 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
D8Led_symbol
modoClave
key
modoTimer
cuentaClave
resetIntento
cuentaIntento
posicion
comparar
cuentaAcierto
sys_init
init_keyboard
TIMER_init

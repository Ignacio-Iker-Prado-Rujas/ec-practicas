   1              	# 1 "../init.asm"
   1              	.global start
   0              	
   0              	
   0              	
   2              	
   3              	.global _ISR_STARTADDRESS
   4              	
   5              	.global DoUndef
   6              	.global DoSWI
   7              	.global DoDabort
   8              	
   9              	.global screen
  10              	
  11              	.extern main
  12              	.extern ISR_Undef
  13              	.extern ISR_SWI
  14              	.extern ISR_FIQ
  15              	.extern ISR_Pabort
  16              	.extern ISR_Dabort 
  17              	.extern DoDetecta
  18              	
  19              	.equ 	_ISR_STARTADDRESS,	0xc7fff00		/* GCS6:64M DRAM/SDRAM 	*/
  20              	.equ    UserStack,   _ISR_STARTADDRESS-0xf00         /* c7ff000 */
  21              	.equ    SVCStack,    _ISR_STARTADDRESS-0xf00+256     /* c7ff100 */
  22              	.equ    UndefStack,  _ISR_STARTADDRESS-0xf00+256*2   /* c7ff200 */
  23              	.equ    AbortStack,  _ISR_STARTADDRESS-0xf00+256*3   /* c7ff300 */
  24              	.equ    IRQStack,    _ISR_STARTADDRESS-0xf00+256*4   /* c7ff400 */
  25              	.equ    FIQStack,    _ISR_STARTADDRESS-0xf00+256*5   /* c7ff500 */
  26              	
  27              	.equ    HandleReset,    _ISR_STARTADDRESS
  28              	.equ    HandleUndef,    _ISR_STARTADDRESS+4
  29              	.equ    HandleSWI,      _ISR_STARTADDRESS+4*2
  30              	.equ    HandlePabort,   _ISR_STARTADDRESS+4*3
  31              	.equ    HandleDabort,   _ISR_STARTADDRESS+4*4
  32              	.equ    HandleReserved, _ISR_STARTADDRESS+4*5
  33              	.equ    HandleIRQ,      _ISR_STARTADDRESS+4*6
  34              	.equ    HandleFIQ,      _ISR_STARTADDRESS+4*7
  35              	
  36              	/* Simbolos para facilitar la codificación
  37              	de los modos de ejecución */
  38              	.equ 	USERMODE,	0x10
  39              	.equ 	FIQMODE,	0x11
  40              	.equ 	IRQMODE,	0x12
  41              	.equ 	SVCMODE,	0x13
  42              	.equ 	ABORTMODE,	0x17
  43              	.equ 	UNDEFMODE,	0x1b
  44              	.equ 	MODEMASK,	0x1f
  45              	
  46              	.equ 	NOINT,		0xc0   /* Máscara para deshabilitar interrupciones */
  47              	.equ    IRQ_MODE,	0x40   /* deshabilitar interrupciones en modo IRQ  */
  48              	.equ    FIQ_MODE,	0x80   /* deshabilitar interrupciones en modo FIQ  */
  49              	
  50              	.equ I_ISPR, 0x1e00020
  51              	.equ EXTINTPND, 0x1d20054
  52              	
  53              	.equ BOTONS, 0x00200000 /* Valor de I_ISPR cuando se activa la excepción IRQ*/
  54              	
  55              	.text
  56              	
  57              	start:
  58              	    /* Si comenzamos con un reset
  59              	     el procesador esta en modo supervisor */
  60 0000 1F00C0E3 	    bic	r0,r0,#MODEMASK
  61 0004 131080E3 	    orr	r1,r0,#SVCMODE
  62 0008 01F02FE1 	    msr	cpsr_cxsf,r1 	    /* SVCMode */
  63              	    /* Si comenzamos con un reset el procesador esta en modo supervisor */
  64              	    /* Si comenzamos con un reset
  65              	     el procesador esta en modo supervisor.
  66              	     Tras InitStacks DEBEMOS seguir en modo supervisor*/
  67 000c 0B0000EB 	    bl InitStacks
  68              		
  69              	    /* Seguimos en modo supervisor, configuramos
  70              	       las direcciones de las rutinas de tratamiento
  71              	       de excepciones */
  72 0010 290000EB 	    bl InitISR
  73              	
  74              		@ habilitamos excepciones
  75 0014 00000FE1 		mrs r0,cpsr
  76 0018 C000C0E3 		bic r0,#NOINT
  77 001c 00F02FE1 		msr cpsr_cxsf,r0
  78              	
  79              	    /* Pasamos a MODO USUARIO, inicializamos su pila
  80              	      y ponemos a cero el frame pointer*/
  81 0020 00000FE1 	    mrs	r0,cpsr
  82 0024 1F00C0E3 	   	bic	r0,r0,#MODEMASK
  83 0028 101080E3 	    orr	r1,r0,#USERMODE
  84 002c 01F02FE1 	    msr	cpsr_cxsf,r1 	    /* SVCMode */
  85 0030 ECD49FE5 	    ldr sp,=UserStack
  86 0034 00B0A0E3 	    mov fp,#0
  87              	
  88              	    /* Saltamos a Main */
  89 0038 FEFFFFEB 	    bl main
  90 003c FEFFFFEA 		b .
  91              	InitStacks:
  92              	    /* Código de la primera parte */
  93              		/*TAREA 1a*/
  94              		/*El alumno/a debe realizar la inicializacion de los punteros de pila (registros SP) de los modos 
  95              		UndefMode,  AbortMode , IRQMode , FIQMode  y  SVCMode */
  96              		
  97              		//Comenzamos leyendo el registro de estado
  98 0040 00000FE1 		mrs	r0,cpsr
  99              	
 100              		//Inicializamos la pila del modo Undef
 101 0044 1F00C0E3 		bic	r0,r0, #MODEMASK
 102 0048 1B1080E3 		orr	r1,r0, #UNDEFMODE
 103 004c 01F02FE1 		msr	cpsr_cxsf, r1
 104 0050 D0D49FE5 		ldr	sp, =UndefStack
 105              	
 106              	    //Inicializamos la pila del modo Abort
 107 0054 1F00C0E3 		bic	r0,r0, #MODEMASK
 108 0058 171080E3 		orr	r1,r0, #ABORTMODE
 109 005c 01F02FE1 		msr	cpsr_cxsf, r1
 110 0060 C4D49FE5 		ldr	sp, =AbortStack
 111              	
 112              	   // Inicializamos la pila del modo IRQ
 113 0064 1F00C0E3 		bic	r0,r0, #MODEMASK
 114 0068 121080E3 		orr	r1,r0, #IRQMODE
 115 006c 01F02FE1 		msr	cpsr_cxsf, r1
 116 0070 B8D49FE5 		ldr	sp, =IRQStack
 117              	
 118              	   // Inicializamos la pila del modo FIQ
 119 0074 1F00C0E3 		bic	r0,r0, #MODEMASK
 120 0078 111080E3 		orr	r1,r0, #FIQMODE
 121 007c 01F02FE1 		msr	cpsr_cxsf, r1
 122 0080 ACD49FE5 		ldr	sp, =FIQStack
 123              	
 124              	   // Inicializamos la pila del modo SVC
 125 0084 1F00C0E3 	   bic	    r0,r0, #MODEMASK
 126 0088 131080E3 	   orr	    r1,r0, #SVCMODE
 127 008c 01F02FE1 	   msr	    cpsr_cxsf, r1
 128 0090 A0D49FE5 	   ldr	    sp, =SVCStack
 129              	    
 130              		/*Fin TAREA 1a*/
 131 0094 0EF0A0E1 	    mov pc, lr
 132              	
 133              	
 134              	//  Debemos comprobar la fuente de la interrupcion.
 135              	// Para ello habra que mirar en (INTOND o I_ISPR)??? y EXTINTPND
 136              	ISR_IRQ:
 137              		/*TAREA 2 definir la rutina ISR_IRQ*/
 138              		/*El alumno/a debe implementar esta rutina, que comprobara si se ha pulsado un boton, y si saltará
 139              		/*Ayuda: No olvideis que esta rutina debe cargar en PC la direccion de retorno al terminar*/
 140              		/*Ayuda: Los registros I_ISPR y EXTINTPND nos proporcionan informacion de las interrupciones pendi
 141              	
 142              		/*Debe preservar los registros arquitectónicos r0-r12*/
 143              	
 144              		/* prólogo */
 145 0098 03402DE9 		push {r0, r1, lr} @ Basta con apilar los registros modificados
 146              			@ INCLUYENDO r0-r3 si se modifican
 147              	
 148              	
 149              		/* cuerpo de la rutina */
 150              	
 151              		/*Comprobamos qué interrupción había habido*/
 152 009c 98049FE5 		ldr r0,=I_ISPR
 153 00a0 000090E5 		ldr r0,[r0]
 154              		/*Cargamos el valor de I_ISPR cuando se pulsa un botón y es prioritario*/
 155 00a4 0216A0E3 		ldr r1, =BOTONS
 156              		/* Comparamos el valor cuando se pulsa el boton con el valor actual de I_ISPR */
 157 00a8 010050E1 		cmp r0,r1
 158 00ac 0000001A 		bne epilogo
 159 00b0 FEFFFFEB 		bl DoDetecta
 160              		/* epílogo */
 161              	
 162              	epilogo:
 163 00b4 0340BDE8 		pop {r0, r1, lr} @ restauramos contexto y retornamos
 164 00b8 04F05EE2 		subs pc,lr,#4 @ La constante a restar depende de la excepción
 165              	
 166              	
 167              		/*Fin TAREA 2*/
 168              	
 169              	InitISR:
 170              	    /* Código de la primera parte */
 171              		/*TAREA 1b*/
 172              		/*El alumno/a debe definir la tabla de direcciones de rutinas*/
 173              		/*Ayuda: las entradas de la tabla son HandleUndef,HandleDabort, HandlePabort, HandleIRQ, HandleSWI
 174              		
 175 00bc 7C049FE5 		ldr r0,=ISR_Undef
 176 00c0 7C149FE5 		ldr r1,=HandleUndef
 177 00c4 000081E5 		str r0,[r1]
 178              	
 179 00c8 78049FE5 		ldr r0,=ISR_Dabort
 180 00cc 78149FE5 		ldr r1,=HandleDabort
 181 00d0 000081E5 		str r0,[r1]
 182              	
 183 00d4 74049FE5 		ldr r0,=ISR_Pabort
 184 00d8 74149FE5 		ldr r1,=HandlePabort
 185 00dc 000081E5 		str r0,[r1]
 186              	
 187 00e0 70049FE5 		ldr r0,=ISR_IRQ
 188 00e4 70149FE5 		ldr r1,=HandleIRQ
 189 00e8 000081E5 		str r0,[r1]
 190              	
 191 00ec 6C049FE5 		ldr r0,=ISR_SWI
 192 00f0 6C149FE5 		ldr r1,=HandleSWI
 193 00f4 000081E5 		str r0,[r1]
 194              	
 195 00f8 68049FE5 		ldr r0,=ISR_FIQ
 196 00fc 68149FE5 		ldr r1,=HandleFIQ
 197 0100 000081E5 		str r0,[r1]
 198              	
 199              	
 200              	
 201              		/*fin TAREA 1b*/
 202 0104 0EF0A0E1 		mov pc,lr
 203              	
 204              	
 205              	
 206              	DoSWI:
 207 0108 000000EF 		swi #0
 208 010c 0EF0A0E1 		mov pc,lr
 209              	
 210              	DoUndef:
 211 0110 100000E6 		.word 0xE6000010
 212 0114 0EF0A0E1 		mov pc,lr
 213              	
 214              	DoDabort:
 215 0118 50049FE5 		ldr r0,=0x0a333333
 216 011c 000080E5 		str r0,[r0]
 217 0120 0EF0A0E1 		mov pc,lr
 218              	
 219              	
 220              	screen:
 221 0124 00000000 		.space 1024
 221      00000000 
 221      00000000 
 221      00000000 
 221      00000000 
 222              	
 223 0524 00F07F0C 	.end
 223      00F27F0C 
 223      00F37F0C 
 223      00F47F0C 
 223      00F57F0C 
DEFINED SYMBOLS
         ../init.asm:57     .text:00000000 start
                            *ABS*:0c7fff00 _ISR_STARTADDRESS
         ../init.asm:210    .text:00000110 DoUndef
         ../init.asm:206    .text:00000108 DoSWI
         ../init.asm:214    .text:00000118 DoDabort
         ../init.asm:220    .text:00000124 screen
         ../init.asm:20     *ABS*:0c7ff000 UserStack
         ../init.asm:21     *ABS*:0c7ff100 SVCStack
         ../init.asm:22     *ABS*:0c7ff200 UndefStack
         ../init.asm:23     *ABS*:0c7ff300 AbortStack
         ../init.asm:24     *ABS*:0c7ff400 IRQStack
         ../init.asm:25     *ABS*:0c7ff500 FIQStack
         ../init.asm:27     *ABS*:0c7fff00 HandleReset
         ../init.asm:28     *ABS*:0c7fff04 HandleUndef
         ../init.asm:29     *ABS*:0c7fff08 HandleSWI
         ../init.asm:30     *ABS*:0c7fff0c HandlePabort
         ../init.asm:31     *ABS*:0c7fff10 HandleDabort
         ../init.asm:32     *ABS*:0c7fff14 HandleReserved
         ../init.asm:33     *ABS*:0c7fff18 HandleIRQ
         ../init.asm:34     *ABS*:0c7fff1c HandleFIQ
         ../init.asm:38     *ABS*:00000010 USERMODE
         ../init.asm:39     *ABS*:00000011 FIQMODE
         ../init.asm:40     *ABS*:00000012 IRQMODE
         ../init.asm:41     *ABS*:00000013 SVCMODE
         ../init.asm:42     *ABS*:00000017 ABORTMODE
         ../init.asm:43     *ABS*:0000001b UNDEFMODE
         ../init.asm:44     *ABS*:0000001f MODEMASK
         ../init.asm:46     *ABS*:000000c0 NOINT
         ../init.asm:47     *ABS*:00000040 IRQ_MODE
         ../init.asm:48     *ABS*:00000080 FIQ_MODE
         ../init.asm:50     *ABS*:01e00020 I_ISPR
         ../init.asm:51     *ABS*:01d20054 EXTINTPND
         ../init.asm:53     *ABS*:00200000 BOTONS
         ../init.asm:60     .text:00000000 $a
         ../init.asm:91     .text:00000040 InitStacks
         ../init.asm:169    .text:000000bc InitISR
         ../init.asm:136    .text:00000098 ISR_IRQ
         ../init.asm:162    .text:000000b4 epilogo
         ../init.asm:211    .text:00000110 $d
         ../init.asm:212    .text:00000114 $a
         ../init.asm:221    .text:00000124 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
main
DoDetecta
ISR_Undef
ISR_Dabort
ISR_Pabort
ISR_SWI
ISR_FIQ

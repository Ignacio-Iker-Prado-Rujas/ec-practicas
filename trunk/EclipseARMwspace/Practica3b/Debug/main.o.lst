   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 1910              		.align	2
 1913              	symbol:
 1914 0000 0C000000 		.word	12
 1915              		.comm	inte,1,1
 1916              		.text
 1917              		.align	2
 1918              		.global	guardaClave
 1920              	guardaClave:
 1921              	.LFB0:
   1:../main.c     ****     /*********************************************************************************************
   2:../main.c     **** * Fichero:	main.c
   3:../main.c     **** * Autor:	
   4:../main.c     **** * Descrip:	punto de entrada de C
   5:../main.c     **** * Version:	<P4-ARM.8seg-button>
   6:../main.c     **** *********************************************************************************************/
   7:../main.c     **** 
   8:../main.c     **** /*--- ficheros de cabecera ---*/
   9:../main.c     **** #include "44blib.h"
  10:../main.c     **** #include "44b.h"
  11:../main.c     **** #include "keyboard.h"
  12:../main.c     **** #include "buffer.h"
  13:../main.c     **** #include "timer.h"
  14:../main.c     **** #include "uart.h"
  15:../main.c     **** 
  16:../main.c     **** /*--- variables globales ---*/
  17:../main.c     **** int symbol = 12;
  18:../main.c     **** char inte;
  19:../main.c     **** extern int key;
  20:../main.c     **** extern int cuentaClave;
  21:../main.c     **** extern int cuentaIntento;
  22:../main.c     **** extern int cuentaAcierto;
  23:../main.c     **** extern int posicion;
  24:../main.c     **** /*--- funciones externas ---*/
  25:../main.c     **** extern void init_keyboard(void);
  26:../main.c     **** extern void D8Led_symbol(int value);
  27:../main.c     **** extern void TIMER_init(void);
  28:../main.c     **** /*--- codigo de las funciones ---*/
  29:../main.c     **** void guardaClave(){
 1922              		.loc 1 29 0
 1923              		.cfi_startproc
 1924              		@ Function supports interworking.
 1925              		@ args = 0, pretend = 0, frame = 0
 1926              		@ frame_needed = 1, uses_anonymous_args = 0
 1927 0000 0DC0A0E1 		mov	ip, sp
 1928              	.LCFI0:
 1929              		.cfi_def_cfa_register 12
 1930 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1931 0008 04B04CE2 		sub	fp, ip, #4
 1932              		.cfi_offset 14, -8
 1933              		.cfi_offset 13, -12
 1934              		.cfi_offset 11, -16
 1935              	.LCFI1:
 1936              		.cfi_def_cfa 11, 4
  30:../main.c     **** 	modoTimer(3);
 1937              		.loc 1 30 0
 1938 000c 0300A0E3 		mov	r0, #3
 1939 0010 FEFFFFEB 		bl	modoTimer
  31:../main.c     **** 	D8Led_symbol(symbol);  	/* muestra el simbolo inicial en el display */
 1940              		.loc 1 31 0
 1941 0014 3C309FE5 		ldr	r3, .L3
 1942 0018 003093E5 		ldr	r3, [r3, #0]
 1943 001c 0300A0E1 		mov	r0, r3
 1944 0020 FEFFFFEB 		bl	D8Led_symbol
  32:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; // Enmascara el timer
 1945              		.loc 1 32 0
 1946 0024 30309FE5 		ldr	r3, .L3+4
 1947 0028 2C209FE5 		ldr	r2, .L3+4
 1948 002c 002092E5 		ldr	r2, [r2, #0]
 1949 0030 012AC2E3 		bic	r2, r2, #4096
 1950 0034 002083E5 		str	r2, [r3, #0]
  33:../main.c     **** 	while (key != 15){
 1951              		.loc 1 33 0
 1952 0038 0000A0E1 		mov	r0, r0	@ nop
 1953              	.L2:
 1954              		.loc 1 33 0 is_stmt 0 discriminator 1
 1955 003c 1C309FE5 		ldr	r3, .L3+8
 1956 0040 003093E5 		ldr	r3, [r3, #0]
 1957 0044 0F0053E3 		cmp	r3, #15
 1958 0048 FBFFFF1A 		bne	.L2
  34:../main.c     **** 
  35:../main.c     **** 	}
  36:../main.c     **** }
 1959              		.loc 1 36 0 is_stmt 1
 1960 004c 0CD04BE2 		sub	sp, fp, #12
 1961 0050 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1962 0054 1EFF2FE1 		bx	lr
 1963              	.L4:
 1964              		.align	2
 1965              	.L3:
 1966 0058 00000000 		.word	symbol
 1967 005c 0C00E001 		.word	31457292
 1968 0060 00000000 		.word	key
 1969              		.cfi_endproc
 1970              	.LFE0:
 1972              		.align	2
 1973              		.global	muestraClave
 1975              	muestraClave:
 1976              	.LFB1:
  37:../main.c     **** 
  38:../main.c     **** void muestraClave(){
 1977              		.loc 1 38 0
 1978              		.cfi_startproc
 1979              		@ Function supports interworking.
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 1, uses_anonymous_args = 0
 1982 0064 0DC0A0E1 		mov	ip, sp
 1983              	.LCFI2:
 1984              		.cfi_def_cfa_register 12
 1985 0068 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1986 006c 04B04CE2 		sub	fp, ip, #4
 1987              		.cfi_offset 14, -8
 1988              		.cfi_offset 13, -12
 1989              		.cfi_offset 11, -16
 1990              	.LCFI3:
 1991              		.cfi_def_cfa 11, 4
  39:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 1992              		.loc 1 39 0
 1993 0070 48309FE5 		ldr	r3, .L7
 1994 0074 44209FE5 		ldr	r2, .L7
 1995 0078 002092E5 		ldr	r2, [r2, #0]
 1996 007c 012AC2E3 		bic	r2, r2, #4096
 1997 0080 002083E5 		str	r2, [r3, #0]
  40:../main.c     **** 	rINTMSK |= BIT_EINT1;
 1998              		.loc 1 40 0
 1999 0084 34309FE5 		ldr	r3, .L7
 2000 0088 30209FE5 		ldr	r2, .L7
 2001 008c 002092E5 		ldr	r2, [r2, #0]
 2002 0090 012482E3 		orr	r2, r2, #16777216
 2003 0094 002083E5 		str	r2, [r3, #0]
  41:../main.c     **** 	modoTimer(0); //Modo muestra de clave
 2004              		.loc 1 41 0
 2005 0098 0000A0E3 		mov	r0, #0
 2006 009c FEFFFFEB 		bl	modoTimer
  42:../main.c     **** 	while(cuentaClave <= 12){
 2007              		.loc 1 42 0
 2008 00a0 0000A0E1 		mov	r0, r0	@ nop
 2009              	.L6:
 2010              		.loc 1 42 0 is_stmt 0 discriminator 1
 2011 00a4 18309FE5 		ldr	r3, .L7+4
 2012 00a8 003093E5 		ldr	r3, [r3, #0]
 2013 00ac 0C0053E3 		cmp	r3, #12
 2014 00b0 FBFFFFDA 		ble	.L6
  43:../main.c     **** 
  44:../main.c     **** 	}
  45:../main.c     **** }
 2015              		.loc 1 45 0 is_stmt 1
 2016 00b4 0CD04BE2 		sub	sp, fp, #12
 2017 00b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2018 00bc 1EFF2FE1 		bx	lr
 2019              	.L8:
 2020              		.align	2
 2021              	.L7:
 2022 00c0 0C00E001 		.word	31457292
 2023 00c4 00000000 		.word	cuentaClave
 2024              		.cfi_endproc
 2025              	.LFE1:
 2027              		.section	.rodata
 2028              		.align	2
 2029              	.LC0:
 2030 0000 496E7472 		.ascii	"Introduzca clave\012\000"
 2030      6F64757A 
 2030      63612063 
 2030      6C617665 
 2030      0A00
 2031              		.text
 2032              		.align	2
 2033              		.global	leeIntento
 2035              	leeIntento:
 2036              	.LFB2:
  46:../main.c     **** void leeIntento(){
 2037              		.loc 1 46 0
 2038              		.cfi_startproc
 2039              		@ Function supports interworking.
 2040              		@ args = 0, pretend = 0, frame = 0
 2041              		@ frame_needed = 1, uses_anonymous_args = 0
 2042 00c8 0DC0A0E1 		mov	ip, sp
 2043              	.LCFI4:
 2044              		.cfi_def_cfa_register 12
 2045 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2046 00d0 04B04CE2 		sub	fp, ip, #4
 2047              		.cfi_offset 14, -8
 2048              		.cfi_offset 13, -12
 2049              		.cfi_offset 11, -16
 2050              	.LCFI5:
 2051              		.cfi_def_cfa 11, 4
  47:../main.c     **** 	resetIntento();
 2052              		.loc 1 47 0
 2053 00d4 FEFFFFEB 		bl	resetIntento
  48:../main.c     **** 	D8Led_symbol(15);
 2054              		.loc 1 48 0
 2055 00d8 0F00A0E3 		mov	r0, #15
 2056 00dc FEFFFFEB 		bl	D8Led_symbol
  49:../main.c     **** 	modoTimer(3);
 2057              		.loc 1 49 0
 2058 00e0 0300A0E3 		mov	r0, #3
 2059 00e4 FEFFFFEB 		bl	modoTimer
  50:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; // Enmascara el timer
 2060              		.loc 1 50 0
 2061 00e8 84309FE5 		ldr	r3, .L12
 2062 00ec 80209FE5 		ldr	r2, .L12
 2063 00f0 002092E5 		ldr	r2, [r2, #0]
 2064 00f4 012AC2E3 		bic	r2, r2, #4096
 2065 00f8 002083E5 		str	r2, [r3, #0]
  51:../main.c     **** 	rINTMSK |= BIT_EINT1; //Inhabilita el keyboard
 2066              		.loc 1 51 0
 2067 00fc 70309FE5 		ldr	r3, .L12
 2068 0100 6C209FE5 		ldr	r2, .L12
 2069 0104 002092E5 		ldr	r2, [r2, #0]
 2070 0108 012482E3 		orr	r2, r2, #16777216
 2071 010c 002083E5 		str	r2, [r3, #0]
  52:../main.c     **** 	Uart_Printf("Introduzca clave\n");
 2072              		.loc 1 52 0
 2073 0110 60009FE5 		ldr	r0, .L12+4
 2074 0114 FEFFFFEB 		bl	Uart_Printf
  53:../main.c     **** 	inte = Uart_Getch();
 2075              		.loc 1 53 0
 2076 0118 FEFFFFEB 		bl	Uart_Getch
 2077 011c 0030A0E1 		mov	r3, r0
 2078 0120 0320A0E1 		mov	r2, r3
 2079 0124 50309FE5 		ldr	r3, .L12+8
 2080 0128 0020C3E5 		strb	r2, [r3, #0]
  54:../main.c     **** 	while (inte != '\r'){
 2081              		.loc 1 54 0
 2082 012c 090000EA 		b	.L10
 2083              	.L11:
  55:../main.c     **** 		insertarIntento(inte-'0');
 2084              		.loc 1 55 0
 2085 0130 44309FE5 		ldr	r3, .L12+8
 2086 0134 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2087 0138 303043E2 		sub	r3, r3, #48
 2088 013c 0300A0E1 		mov	r0, r3
 2089 0140 FEFFFFEB 		bl	insertarIntento
  56:../main.c     **** 		inte = Uart_Getch();
 2090              		.loc 1 56 0
 2091 0144 FEFFFFEB 		bl	Uart_Getch
 2092 0148 0030A0E1 		mov	r3, r0
 2093 014c 0320A0E1 		mov	r2, r3
 2094 0150 24309FE5 		ldr	r3, .L12+8
 2095 0154 0020C3E5 		strb	r2, [r3, #0]
 2096              	.L10:
  54:../main.c     **** 	while (inte != '\r'){
 2097              		.loc 1 54 0 discriminator 1
 2098 0158 1C309FE5 		ldr	r3, .L12+8
 2099 015c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2100 0160 0D0053E3 		cmp	r3, #13
 2101 0164 F1FFFF1A 		bne	.L11
  57:../main.c     **** 	}
  58:../main.c     **** }
 2102              		.loc 1 58 0
 2103 0168 0CD04BE2 		sub	sp, fp, #12
 2104 016c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2105 0170 1EFF2FE1 		bx	lr
 2106              	.L13:
 2107              		.align	2
 2108              	.L12:
 2109 0174 0C00E001 		.word	31457292
 2110 0178 00000000 		.word	.LC0
 2111 017c 00000000 		.word	inte
 2112              		.cfi_endproc
 2113              	.LFE2:
 2115              		.align	2
 2116              		.global	muestraIntento
 2118              	muestraIntento:
 2119              	.LFB3:
  59:../main.c     **** void muestraIntento(){
 2120              		.loc 1 59 0
 2121              		.cfi_startproc
 2122              		@ Function supports interworking.
 2123              		@ args = 0, pretend = 0, frame = 0
 2124              		@ frame_needed = 1, uses_anonymous_args = 0
 2125 0180 0DC0A0E1 		mov	ip, sp
 2126              	.LCFI6:
 2127              		.cfi_def_cfa_register 12
 2128 0184 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2129 0188 04B04CE2 		sub	fp, ip, #4
 2130              		.cfi_offset 14, -8
 2131              		.cfi_offset 13, -12
 2132              		.cfi_offset 11, -16
 2133              	.LCFI7:
 2134              		.cfi_def_cfa 11, 4
  60:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 2135              		.loc 1 60 0
 2136 018c 60309FE5 		ldr	r3, .L16
 2137 0190 5C209FE5 		ldr	r2, .L16
 2138 0194 002092E5 		ldr	r2, [r2, #0]
 2139 0198 012AC2E3 		bic	r2, r2, #4096
 2140 019c 002083E5 		str	r2, [r3, #0]
  61:../main.c     **** 	rINTMSK |= BIT_EINT1;
 2141              		.loc 1 61 0
 2142 01a0 4C309FE5 		ldr	r3, .L16
 2143 01a4 48209FE5 		ldr	r2, .L16
 2144 01a8 002092E5 		ldr	r2, [r2, #0]
 2145 01ac 012482E3 		orr	r2, r2, #16777216
 2146 01b0 002083E5 		str	r2, [r3, #0]
  62:../main.c     **** 	modoTimer(1); //Modo muestra de intento
 2147              		.loc 1 62 0
 2148 01b4 0100A0E3 		mov	r0, #1
 2149 01b8 FEFFFFEB 		bl	modoTimer
  63:../main.c     **** 	cuentaIntento = 0;
 2150              		.loc 1 63 0
 2151 01bc 34309FE5 		ldr	r3, .L16+4
 2152 01c0 0020A0E3 		mov	r2, #0
 2153 01c4 002083E5 		str	r2, [r3, #0]
  64:../main.c     **** 	posicion = 0;
 2154              		.loc 1 64 0
 2155 01c8 2C309FE5 		ldr	r3, .L16+8
 2156 01cc 0020A0E3 		mov	r2, #0
 2157 01d0 002083E5 		str	r2, [r3, #0]
  65:../main.c     **** 	while(cuentaIntento <= 16){
 2158              		.loc 1 65 0
 2159 01d4 0000A0E1 		mov	r0, r0	@ nop
 2160              	.L15:
 2161              		.loc 1 65 0 is_stmt 0 discriminator 1
 2162 01d8 18309FE5 		ldr	r3, .L16+4
 2163 01dc 003093E5 		ldr	r3, [r3, #0]
 2164 01e0 100053E3 		cmp	r3, #16
 2165 01e4 FBFFFFDA 		ble	.L15
  66:../main.c     **** 
  67:../main.c     **** 	}
  68:../main.c     **** }
 2166              		.loc 1 68 0 is_stmt 1
 2167 01e8 0CD04BE2 		sub	sp, fp, #12
 2168 01ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2169 01f0 1EFF2FE1 		bx	lr
 2170              	.L17:
 2171              		.align	2
 2172              	.L16:
 2173 01f4 0C00E001 		.word	31457292
 2174 01f8 00000000 		.word	cuentaIntento
 2175 01fc 00000000 		.word	posicion
 2176              		.cfi_endproc
 2177              	.LFE3:
 2179              		.section	.rodata
 2180 0012 0000     		.align	2
 2181              	.LC1:
 2182 0014 436F7272 		.ascii	"Correcto\012\000"
 2182      6563746F 
 2182      0A00
 2183 001e 0000     		.align	2
 2184              	.LC2:
 2185 0020 4572726F 		.ascii	"Error\012\000"
 2185      720A00
 2186 0027 00       		.text
 2187              		.align	2
 2188              		.global	compruebaAcierto
 2190              	compruebaAcierto:
 2191              	.LFB4:
  69:../main.c     **** void compruebaAcierto(){
 2192              		.loc 1 69 0
 2193              		.cfi_startproc
 2194              		@ Function supports interworking.
 2195              		@ args = 0, pretend = 0, frame = 0
 2196              		@ frame_needed = 1, uses_anonymous_args = 0
 2197 0200 0DC0A0E1 		mov	ip, sp
 2198              	.LCFI8:
 2199              		.cfi_def_cfa_register 12
 2200 0204 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2201 0208 04B04CE2 		sub	fp, ip, #4
 2202              		.cfi_offset 14, -8
 2203              		.cfi_offset 13, -12
 2204              		.cfi_offset 11, -16
 2205              	.LCFI9:
 2206              		.cfi_def_cfa 11, 4
  70:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 2207              		.loc 1 70 0
 2208 020c 88309FE5 		ldr	r3, .L22
 2209 0210 84209FE5 		ldr	r2, .L22
 2210 0214 002092E5 		ldr	r2, [r2, #0]
 2211 0218 012AC2E3 		bic	r2, r2, #4096
 2212 021c 002083E5 		str	r2, [r3, #0]
  71:../main.c     **** 	rINTMSK |= BIT_EINT1;
 2213              		.loc 1 71 0
 2214 0220 74309FE5 		ldr	r3, .L22
 2215 0224 70209FE5 		ldr	r2, .L22
 2216 0228 002092E5 		ldr	r2, [r2, #0]
 2217 022c 012482E3 		orr	r2, r2, #16777216
 2218 0230 002083E5 		str	r2, [r3, #0]
  72:../main.c     **** 	modoTimer(2); //Modo muestra de clave
 2219              		.loc 1 72 0
 2220 0234 0200A0E3 		mov	r0, #2
 2221 0238 FEFFFFEB 		bl	modoTimer
  73:../main.c     **** 	if (comparar() == 1){
 2222              		.loc 1 73 0
 2223 023c FEFFFFEB 		bl	comparar
 2224 0240 0030A0E1 		mov	r3, r0
 2225 0244 010053E3 		cmp	r3, #1
 2226 0248 0400001A 		bne	.L19
  74:../main.c     **** 		D8Led_symbol(10);
 2227              		.loc 1 74 0
 2228 024c 0A00A0E3 		mov	r0, #10
 2229 0250 FEFFFFEB 		bl	D8Led_symbol
  75:../main.c     **** 		Uart_Printf("Correcto\n");
 2230              		.loc 1 75 0
 2231 0254 44009FE5 		ldr	r0, .L22+4
 2232 0258 FEFFFFEB 		bl	Uart_Printf
 2233 025c 030000EA 		b	.L20
 2234              	.L19:
  76:../main.c     **** 	}
  77:../main.c     **** 	else{
  78:../main.c     **** 		D8Led_symbol(14);
 2235              		.loc 1 78 0
 2236 0260 0E00A0E3 		mov	r0, #14
 2237 0264 FEFFFFEB 		bl	D8Led_symbol
  79:../main.c     **** 		Uart_Printf("Error\n");
 2238              		.loc 1 79 0
 2239 0268 34009FE5 		ldr	r0, .L22+8
 2240 026c FEFFFFEB 		bl	Uart_Printf
 2241              	.L20:
  80:../main.c     **** 	}
  81:../main.c     **** 	cuentaAcierto = 0;
 2242              		.loc 1 81 0
 2243 0270 30309FE5 		ldr	r3, .L22+12
 2244 0274 0020A0E3 		mov	r2, #0
 2245 0278 002083E5 		str	r2, [r3, #0]
  82:../main.c     **** 	while(cuentaAcierto <= 4){
 2246              		.loc 1 82 0
 2247 027c 0000A0E1 		mov	r0, r0	@ nop
 2248              	.L21:
 2249              		.loc 1 82 0 is_stmt 0 discriminator 1
 2250 0280 20309FE5 		ldr	r3, .L22+12
 2251 0284 003093E5 		ldr	r3, [r3, #0]
 2252 0288 040053E3 		cmp	r3, #4
 2253 028c FBFFFFDA 		ble	.L21
  83:../main.c     **** 
  84:../main.c     **** 	}
  85:../main.c     **** }
 2254              		.loc 1 85 0 is_stmt 1
 2255 0290 0CD04BE2 		sub	sp, fp, #12
 2256 0294 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2257 0298 1EFF2FE1 		bx	lr
 2258              	.L23:
 2259              		.align	2
 2260              	.L22:
 2261 029c 0C00E001 		.word	31457292
 2262 02a0 14000000 		.word	.LC1
 2263 02a4 20000000 		.word	.LC2
 2264 02a8 00000000 		.word	cuentaAcierto
 2265              		.cfi_endproc
 2266              	.LFE4:
 2268              		.align	2
 2269              		.global	main
 2271              	main:
 2272              	.LFB5:
  86:../main.c     **** int main(void)
  87:../main.c     **** {	
 2273              		.loc 1 87 0
 2274              		.cfi_startproc
 2275              		@ Function supports interworking.
 2276              		@ args = 0, pretend = 0, frame = 0
 2277              		@ frame_needed = 1, uses_anonymous_args = 0
 2278 02ac 0DC0A0E1 		mov	ip, sp
 2279              	.LCFI10:
 2280              		.cfi_def_cfa_register 12
 2281 02b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2282 02b4 04B04CE2 		sub	fp, ip, #4
 2283              		.cfi_offset 14, -8
 2284              		.cfi_offset 13, -12
 2285              		.cfi_offset 11, -16
 2286              	.LCFI11:
 2287              		.cfi_def_cfa 11, 4
  88:../main.c     **** 
  89:../main.c     ****     sys_init();     		/* Inicializacion de la placa, interrupciones, puertos y UART */
 2288              		.loc 1 89 0
 2289 02b8 FEFFFFEB 		bl	sys_init
  90:../main.c     ****     init_keyboard(); 	    /* Inicializacion de EINT6/7 y del puerto G */
 2290              		.loc 1 90 0
 2291 02bc FEFFFFEB 		bl	init_keyboard
  91:../main.c     **** 	TIMER_init();	   		// Inicializacion del temporizador
 2292              		.loc 1 91 0
 2293 02c0 FEFFFFEB 		bl	TIMER_init
  92:../main.c     **** 	Uart_Init(115200);
 2294              		.loc 1 92 0
 2295 02c4 18009FE5 		ldr	r0, .L26
 2296 02c8 FEFFFFEB 		bl	Uart_Init
  93:../main.c     **** 
  94:../main.c     **** 	guardaClave();
 2297              		.loc 1 94 0
 2298 02cc FEFFFFEB 		bl	guardaClave
  95:../main.c     **** 	muestraClave();
 2299              		.loc 1 95 0
 2300 02d0 FEFFFFEB 		bl	muestraClave
 2301              	.L25:
  96:../main.c     **** 
  97:../main.c     **** 	while(1){
  98:../main.c     **** 		leeIntento();
 2302              		.loc 1 98 0 discriminator 1
 2303 02d4 FEFFFFEB 		bl	leeIntento
  99:../main.c     **** 		muestraIntento();
 2304              		.loc 1 99 0 discriminator 1
 2305 02d8 FEFFFFEB 		bl	muestraIntento
 100:../main.c     **** 		compruebaAcierto();
 2306              		.loc 1 100 0 discriminator 1
 2307 02dc FEFFFFEB 		bl	compruebaAcierto
 101:../main.c     **** 	}
 2308              		.loc 1 101 0 discriminator 1
 2309 02e0 FBFFFFEA 		b	.L25
 2310              	.L27:
 2311              		.align	2
 2312              	.L26:
 2313 02e4 00C20100 		.word	115200
 2314              		.cfi_endproc
 2315              	.LFE5:
 2317              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:1913   .data:00000000 symbol
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:1910   .data:00000000 $d
                            *COM*:00000001 inte
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:1917   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:1920   .text:00000000 guardaClave
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:1966   .text:00000058 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:1972   .text:00000064 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:1975   .text:00000064 muestraClave
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2022   .text:000000c0 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2028   .rodata:00000000 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2032   .text:000000c8 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2035   .text:000000c8 leeIntento
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2109   .text:00000174 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2115   .text:00000180 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2118   .text:00000180 muestraIntento
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2173   .text:000001f4 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2187   .text:00000200 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2190   .text:00000200 compruebaAcierto
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2261   .text:0000029c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2268   .text:000002ac $a
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2271   .text:000002ac main
C:\Users\USUARI~1\AppData\Local\Temp\ccXZqptG.s:2313   .text:000002e4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
modoTimer
D8Led_symbol
key
cuentaClave
resetIntento
Uart_Printf
Uart_Getch
insertarIntento
cuentaIntento
posicion
comparar
cuentaAcierto
sys_init
init_keyboard
TIMER_init
Uart_Init

   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 1910              		.align	2
 1913              	symbol:
 1914 0000 0C000000 		.word	12
 1915              		.comm	inte,1,1
 1916              		.text
 1917              		.align	2
 1918              		.global	guardaClave
 1920              	guardaClave:
 1921              	.LFB0:
   1:../main.c     ****     /*********************************************************************************************
   2:../main.c     **** * Fichero:	main.c
   3:../main.c     **** * Autor:	
   4:../main.c     **** * Descrip:	punto de entrada de C
   5:../main.c     **** * Version:	<P4-ARM.8seg-button>
   6:../main.c     **** *********************************************************************************************/
   7:../main.c     **** 
   8:../main.c     **** /*--- ficheros de cabecera ---*/
   9:../main.c     **** #include "44blib.h"
  10:../main.c     **** #include "44b.h"
  11:../main.c     **** #include "keyboard.h"
  12:../main.c     **** #include "buffer.h"
  13:../main.c     **** #include "timer.h"
  14:../main.c     **** #include "uart.h"
  15:../main.c     **** 
  16:../main.c     **** /*--- variables globales ---*/
  17:../main.c     **** int symbol = 12;
  18:../main.c     **** char inte;
  19:../main.c     **** extern int key;
  20:../main.c     **** extern int cuentaClave;
  21:../main.c     **** extern int cuentaIntento;
  22:../main.c     **** extern int cuentaAcierto;
  23:../main.c     **** extern int posicion;
  24:../main.c     **** /*--- funciones externas ---*/
  25:../main.c     **** extern void init_keyboard(void);
  26:../main.c     **** extern void D8Led_symbol(int value);
  27:../main.c     **** extern void TIMER_init(void);
  28:../main.c     **** /*--- codigo de las funciones ---*/
  29:../main.c     **** void guardaClave(){
 1922              		.loc 1 29 0
 1923              		.cfi_startproc
 1924              		@ Function supports interworking.
 1925              		@ args = 0, pretend = 0, frame = 0
 1926              		@ frame_needed = 1, uses_anonymous_args = 0
 1927 0000 0DC0A0E1 		mov	ip, sp
 1928              	.LCFI0:
 1929              		.cfi_def_cfa_register 12
 1930 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1931 0008 04B04CE2 		sub	fp, ip, #4
 1932              		.cfi_offset 14, -8
 1933              		.cfi_offset 13, -12
 1934              		.cfi_offset 11, -16
 1935              	.LCFI1:
 1936              		.cfi_def_cfa 11, 4
  30:../main.c     **** 	D8Led_symbol(symbol);  	/* muestra el simbolo inicial en el display */
 1937              		.loc 1 30 0
 1938 000c 3C309FE5 		ldr	r3, .L3
 1939 0010 003093E5 		ldr	r3, [r3, #0]
 1940 0014 0300A0E1 		mov	r0, r3
 1941 0018 FEFFFFEB 		bl	D8Led_symbol
  31:../main.c     **** 	rINTMSK |= BIT_TIMER1; // Enmascara el timer
 1942              		.loc 1 31 0
 1943 001c 30309FE5 		ldr	r3, .L3+4
 1944 0020 2C209FE5 		ldr	r2, .L3+4
 1945 0024 002092E5 		ldr	r2, [r2, #0]
 1946 0028 012A82E3 		orr	r2, r2, #4096
 1947 002c 002083E5 		str	r2, [r3, #0]
  32:../main.c     **** 	while (key != 15){
 1948              		.loc 1 32 0
 1949 0030 0000A0E1 		mov	r0, r0	@ nop
 1950              	.L2:
 1951              		.loc 1 32 0 is_stmt 0 discriminator 1
 1952 0034 1C309FE5 		ldr	r3, .L3+8
 1953 0038 003093E5 		ldr	r3, [r3, #0]
 1954 003c 0F0053E3 		cmp	r3, #15
 1955 0040 FBFFFF1A 		bne	.L2
  33:../main.c     **** 
  34:../main.c     **** 	}
  35:../main.c     **** }
 1956              		.loc 1 35 0 is_stmt 1
 1957 0044 0CD04BE2 		sub	sp, fp, #12
 1958 0048 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1959 004c 1EFF2FE1 		bx	lr
 1960              	.L4:
 1961              		.align	2
 1962              	.L3:
 1963 0050 00000000 		.word	symbol
 1964 0054 0C00E001 		.word	31457292
 1965 0058 00000000 		.word	key
 1966              		.cfi_endproc
 1967              	.LFE0:
 1969              		.section	.rodata
 1970              		.align	2
 1971              	.LC0:
 1972 0000 496E7472 		.ascii	"Introduzca clave\012\000"
 1972      6F64757A 
 1972      63612063 
 1972      6C617665 
 1972      0A00
 1973              		.text
 1974              		.align	2
 1975              		.global	muestraClave
 1977              	muestraClave:
 1978              	.LFB1:
  36:../main.c     **** 
  37:../main.c     **** void muestraClave(){
 1979              		.loc 1 37 0
 1980              		.cfi_startproc
 1981              		@ Function supports interworking.
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 1, uses_anonymous_args = 0
 1984 005c 0DC0A0E1 		mov	ip, sp
 1985              	.LCFI2:
 1986              		.cfi_def_cfa_register 12
 1987 0060 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1988 0064 04B04CE2 		sub	fp, ip, #4
 1989              		.cfi_offset 14, -8
 1990              		.cfi_offset 13, -12
 1991              		.cfi_offset 11, -16
 1992              	.LCFI3:
 1993              		.cfi_def_cfa 11, 4
  38:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 1994              		.loc 1 38 0
 1995 0068 50309FE5 		ldr	r3, .L7
 1996 006c 4C209FE5 		ldr	r2, .L7
 1997 0070 002092E5 		ldr	r2, [r2, #0]
 1998 0074 012AC2E3 		bic	r2, r2, #4096
 1999 0078 002083E5 		str	r2, [r3, #0]
  39:../main.c     **** 	rINTMSK |= BIT_EINT1;
 2000              		.loc 1 39 0
 2001 007c 3C309FE5 		ldr	r3, .L7
 2002 0080 38209FE5 		ldr	r2, .L7
 2003 0084 002092E5 		ldr	r2, [r2, #0]
 2004 0088 012482E3 		orr	r2, r2, #16777216
 2005 008c 002083E5 		str	r2, [r3, #0]
  40:../main.c     **** 	modoTimer(0); //Modo muestra de clave
 2006              		.loc 1 40 0
 2007 0090 0000A0E3 		mov	r0, #0
 2008 0094 FEFFFFEB 		bl	modoTimer
  41:../main.c     **** 	Uart_Printf("Introduzca clave\n");
 2009              		.loc 1 41 0
 2010 0098 24009FE5 		ldr	r0, .L7+4
 2011 009c FEFFFFEB 		bl	Uart_Printf
  42:../main.c     **** 	while(cuentaClave <= 12){
 2012              		.loc 1 42 0
 2013 00a0 0000A0E1 		mov	r0, r0	@ nop
 2014              	.L6:
 2015              		.loc 1 42 0 is_stmt 0 discriminator 1
 2016 00a4 1C309FE5 		ldr	r3, .L7+8
 2017 00a8 003093E5 		ldr	r3, [r3, #0]
 2018 00ac 0C0053E3 		cmp	r3, #12
 2019 00b0 FBFFFFDA 		ble	.L6
  43:../main.c     **** 
  44:../main.c     **** 	}
  45:../main.c     **** }
 2020              		.loc 1 45 0 is_stmt 1
 2021 00b4 0CD04BE2 		sub	sp, fp, #12
 2022 00b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2023 00bc 1EFF2FE1 		bx	lr
 2024              	.L8:
 2025              		.align	2
 2026              	.L7:
 2027 00c0 0C00E001 		.word	31457292
 2028 00c4 00000000 		.word	.LC0
 2029 00c8 00000000 		.word	cuentaClave
 2030              		.cfi_endproc
 2031              	.LFE1:
 2033              		.align	2
 2034              		.global	leeIntento
 2036              	leeIntento:
 2037              	.LFB2:
  46:../main.c     **** void leeIntento(){
 2038              		.loc 1 46 0
 2039              		.cfi_startproc
 2040              		@ Function supports interworking.
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 1, uses_anonymous_args = 0
 2043 00cc 0DC0A0E1 		mov	ip, sp
 2044              	.LCFI4:
 2045              		.cfi_def_cfa_register 12
 2046 00d0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2047 00d4 04B04CE2 		sub	fp, ip, #4
 2048              		.cfi_offset 14, -8
 2049              		.cfi_offset 13, -12
 2050              		.cfi_offset 11, -16
 2051              	.LCFI5:
 2052              		.cfi_def_cfa 11, 4
  47:../main.c     **** 	resetIntento();
 2053              		.loc 1 47 0
 2054 00d8 FEFFFFEB 		bl	resetIntento
  48:../main.c     **** 	D8Led_symbol(15);
 2055              		.loc 1 48 0
 2056 00dc 0F00A0E3 		mov	r0, #15
 2057 00e0 FEFFFFEB 		bl	D8Led_symbol
  49:../main.c     **** 	rINTMSK |= BIT_TIMER1; // Enmascara el timer
 2058              		.loc 1 49 0
 2059 00e4 7C309FE5 		ldr	r3, .L12
 2060 00e8 78209FE5 		ldr	r2, .L12
 2061 00ec 002092E5 		ldr	r2, [r2, #0]
 2062 00f0 012A82E3 		orr	r2, r2, #4096
 2063 00f4 002083E5 		str	r2, [r3, #0]
  50:../main.c     **** 	rINTMSK |= BIT_EINT1; //Inhabilita el keyboard
 2064              		.loc 1 50 0
 2065 00f8 68309FE5 		ldr	r3, .L12
 2066 00fc 64209FE5 		ldr	r2, .L12
 2067 0100 002092E5 		ldr	r2, [r2, #0]
 2068 0104 012482E3 		orr	r2, r2, #16777216
 2069 0108 002083E5 		str	r2, [r3, #0]
  51:../main.c     **** 	inte = Uart_Getch();
 2070              		.loc 1 51 0
 2071 010c FEFFFFEB 		bl	Uart_Getch
 2072 0110 0030A0E1 		mov	r3, r0
 2073 0114 0320A0E1 		mov	r2, r3
 2074 0118 4C309FE5 		ldr	r3, .L12+4
 2075 011c 0020C3E5 		strb	r2, [r3, #0]
  52:../main.c     **** 	while (inte != '\n'){
 2076              		.loc 1 52 0
 2077 0120 090000EA 		b	.L10
 2078              	.L11:
  53:../main.c     **** 		insertarIntento(inte-'0');
 2079              		.loc 1 53 0
 2080 0124 40309FE5 		ldr	r3, .L12+4
 2081 0128 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2082 012c 303043E2 		sub	r3, r3, #48
 2083 0130 0300A0E1 		mov	r0, r3
 2084 0134 FEFFFFEB 		bl	insertarIntento
  54:../main.c     **** 		inte = Uart_Getch();
 2085              		.loc 1 54 0
 2086 0138 FEFFFFEB 		bl	Uart_Getch
 2087 013c 0030A0E1 		mov	r3, r0
 2088 0140 0320A0E1 		mov	r2, r3
 2089 0144 20309FE5 		ldr	r3, .L12+4
 2090 0148 0020C3E5 		strb	r2, [r3, #0]
 2091              	.L10:
  52:../main.c     **** 	while (inte != '\n'){
 2092              		.loc 1 52 0 discriminator 1
 2093 014c 18309FE5 		ldr	r3, .L12+4
 2094 0150 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2095 0154 0A0053E3 		cmp	r3, #10
 2096 0158 F1FFFF1A 		bne	.L11
  55:../main.c     **** 	}
  56:../main.c     **** }
 2097              		.loc 1 56 0
 2098 015c 0CD04BE2 		sub	sp, fp, #12
 2099 0160 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2100 0164 1EFF2FE1 		bx	lr
 2101              	.L13:
 2102              		.align	2
 2103              	.L12:
 2104 0168 0C00E001 		.word	31457292
 2105 016c 00000000 		.word	inte
 2106              		.cfi_endproc
 2107              	.LFE2:
 2109              		.align	2
 2110              		.global	muestraIntento
 2112              	muestraIntento:
 2113              	.LFB3:
  57:../main.c     **** void muestraIntento(){
 2114              		.loc 1 57 0
 2115              		.cfi_startproc
 2116              		@ Function supports interworking.
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 1, uses_anonymous_args = 0
 2119 0170 0DC0A0E1 		mov	ip, sp
 2120              	.LCFI6:
 2121              		.cfi_def_cfa_register 12
 2122 0174 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2123 0178 04B04CE2 		sub	fp, ip, #4
 2124              		.cfi_offset 14, -8
 2125              		.cfi_offset 13, -12
 2126              		.cfi_offset 11, -16
 2127              	.LCFI7:
 2128              		.cfi_def_cfa 11, 4
  58:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 2129              		.loc 1 58 0
 2130 017c 60309FE5 		ldr	r3, .L16
 2131 0180 5C209FE5 		ldr	r2, .L16
 2132 0184 002092E5 		ldr	r2, [r2, #0]
 2133 0188 012AC2E3 		bic	r2, r2, #4096
 2134 018c 002083E5 		str	r2, [r3, #0]
  59:../main.c     **** 	rINTMSK |= BIT_EINT1;
 2135              		.loc 1 59 0
 2136 0190 4C309FE5 		ldr	r3, .L16
 2137 0194 48209FE5 		ldr	r2, .L16
 2138 0198 002092E5 		ldr	r2, [r2, #0]
 2139 019c 012482E3 		orr	r2, r2, #16777216
 2140 01a0 002083E5 		str	r2, [r3, #0]
  60:../main.c     **** 	modoTimer(1); //Modo muestra de intento
 2141              		.loc 1 60 0
 2142 01a4 0100A0E3 		mov	r0, #1
 2143 01a8 FEFFFFEB 		bl	modoTimer
  61:../main.c     **** 	cuentaIntento = 0;
 2144              		.loc 1 61 0
 2145 01ac 34309FE5 		ldr	r3, .L16+4
 2146 01b0 0020A0E3 		mov	r2, #0
 2147 01b4 002083E5 		str	r2, [r3, #0]
  62:../main.c     **** 	posicion = 0;
 2148              		.loc 1 62 0
 2149 01b8 2C309FE5 		ldr	r3, .L16+8
 2150 01bc 0020A0E3 		mov	r2, #0
 2151 01c0 002083E5 		str	r2, [r3, #0]
  63:../main.c     **** 	while(cuentaIntento <= 16){
 2152              		.loc 1 63 0
 2153 01c4 0000A0E1 		mov	r0, r0	@ nop
 2154              	.L15:
 2155              		.loc 1 63 0 is_stmt 0 discriminator 1
 2156 01c8 18309FE5 		ldr	r3, .L16+4
 2157 01cc 003093E5 		ldr	r3, [r3, #0]
 2158 01d0 100053E3 		cmp	r3, #16
 2159 01d4 FBFFFFDA 		ble	.L15
  64:../main.c     **** 
  65:../main.c     **** 	}
  66:../main.c     **** }
 2160              		.loc 1 66 0 is_stmt 1
 2161 01d8 0CD04BE2 		sub	sp, fp, #12
 2162 01dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2163 01e0 1EFF2FE1 		bx	lr
 2164              	.L17:
 2165              		.align	2
 2166              	.L16:
 2167 01e4 0C00E001 		.word	31457292
 2168 01e8 00000000 		.word	cuentaIntento
 2169 01ec 00000000 		.word	posicion
 2170              		.cfi_endproc
 2171              	.LFE3:
 2173              		.section	.rodata
 2174 0012 0000     		.align	2
 2175              	.LC1:
 2176 0014 436F7272 		.ascii	"Correcto\012\000"
 2176      6563746F 
 2176      0A00
 2177 001e 0000     		.align	2
 2178              	.LC2:
 2179 0020 4572726F 		.ascii	"Error\012\000"
 2179      720A00
 2180 0027 00       		.text
 2181              		.align	2
 2182              		.global	compruebaAcierto
 2184              	compruebaAcierto:
 2185              	.LFB4:
  67:../main.c     **** void compruebaAcierto(){
 2186              		.loc 1 67 0
 2187              		.cfi_startproc
 2188              		@ Function supports interworking.
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 1, uses_anonymous_args = 0
 2191 01f0 0DC0A0E1 		mov	ip, sp
 2192              	.LCFI8:
 2193              		.cfi_def_cfa_register 12
 2194 01f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2195 01f8 04B04CE2 		sub	fp, ip, #4
 2196              		.cfi_offset 14, -8
 2197              		.cfi_offset 13, -12
 2198              		.cfi_offset 11, -16
 2199              	.LCFI9:
 2200              		.cfi_def_cfa 11, 4
  68:../main.c     **** 	rINTMSK &= ~BIT_TIMER1; //Habilita el timer, enmascara el keyboard
 2201              		.loc 1 68 0
 2202 01fc 88309FE5 		ldr	r3, .L22
 2203 0200 84209FE5 		ldr	r2, .L22
 2204 0204 002092E5 		ldr	r2, [r2, #0]
 2205 0208 012AC2E3 		bic	r2, r2, #4096
 2206 020c 002083E5 		str	r2, [r3, #0]
  69:../main.c     **** 	rINTMSK |= BIT_EINT1;
 2207              		.loc 1 69 0
 2208 0210 74309FE5 		ldr	r3, .L22
 2209 0214 70209FE5 		ldr	r2, .L22
 2210 0218 002092E5 		ldr	r2, [r2, #0]
 2211 021c 012482E3 		orr	r2, r2, #16777216
 2212 0220 002083E5 		str	r2, [r3, #0]
  70:../main.c     **** 	modoTimer(2); //Modo muestra de clave
 2213              		.loc 1 70 0
 2214 0224 0200A0E3 		mov	r0, #2
 2215 0228 FEFFFFEB 		bl	modoTimer
  71:../main.c     **** 	if (comparar() == 1){
 2216              		.loc 1 71 0
 2217 022c FEFFFFEB 		bl	comparar
 2218 0230 0030A0E1 		mov	r3, r0
 2219 0234 010053E3 		cmp	r3, #1
 2220 0238 0400001A 		bne	.L19
  72:../main.c     **** 		D8Led_symbol(10);
 2221              		.loc 1 72 0
 2222 023c 0A00A0E3 		mov	r0, #10
 2223 0240 FEFFFFEB 		bl	D8Led_symbol
  73:../main.c     **** 		Uart_Printf("Correcto\n");
 2224              		.loc 1 73 0
 2225 0244 44009FE5 		ldr	r0, .L22+4
 2226 0248 FEFFFFEB 		bl	Uart_Printf
 2227 024c 030000EA 		b	.L20
 2228              	.L19:
  74:../main.c     **** 	}
  75:../main.c     **** 	else{
  76:../main.c     **** 		D8Led_symbol(14);
 2229              		.loc 1 76 0
 2230 0250 0E00A0E3 		mov	r0, #14
 2231 0254 FEFFFFEB 		bl	D8Led_symbol
  77:../main.c     **** 		Uart_Printf("Error\n");
 2232              		.loc 1 77 0
 2233 0258 34009FE5 		ldr	r0, .L22+8
 2234 025c FEFFFFEB 		bl	Uart_Printf
 2235              	.L20:
  78:../main.c     **** 	}
  79:../main.c     **** 	cuentaAcierto = 0;
 2236              		.loc 1 79 0
 2237 0260 30309FE5 		ldr	r3, .L22+12
 2238 0264 0020A0E3 		mov	r2, #0
 2239 0268 002083E5 		str	r2, [r3, #0]
  80:../main.c     **** 	while(cuentaAcierto <= 4){
 2240              		.loc 1 80 0
 2241 026c 0000A0E1 		mov	r0, r0	@ nop
 2242              	.L21:
 2243              		.loc 1 80 0 is_stmt 0 discriminator 1
 2244 0270 20309FE5 		ldr	r3, .L22+12
 2245 0274 003093E5 		ldr	r3, [r3, #0]
 2246 0278 040053E3 		cmp	r3, #4
 2247 027c FBFFFFDA 		ble	.L21
  81:../main.c     **** 
  82:../main.c     **** 	}
  83:../main.c     **** }
 2248              		.loc 1 83 0 is_stmt 1
 2249 0280 0CD04BE2 		sub	sp, fp, #12
 2250 0284 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2251 0288 1EFF2FE1 		bx	lr
 2252              	.L23:
 2253              		.align	2
 2254              	.L22:
 2255 028c 0C00E001 		.word	31457292
 2256 0290 14000000 		.word	.LC1
 2257 0294 20000000 		.word	.LC2
 2258 0298 00000000 		.word	cuentaAcierto
 2259              		.cfi_endproc
 2260              	.LFE4:
 2262              		.align	2
 2263              		.global	main
 2265              	main:
 2266              	.LFB5:
  84:../main.c     **** int main(void)
  85:../main.c     **** {	
 2267              		.loc 1 85 0
 2268              		.cfi_startproc
 2269              		@ Function supports interworking.
 2270              		@ args = 0, pretend = 0, frame = 0
 2271              		@ frame_needed = 1, uses_anonymous_args = 0
 2272 029c 0DC0A0E1 		mov	ip, sp
 2273              	.LCFI10:
 2274              		.cfi_def_cfa_register 12
 2275 02a0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2276 02a4 04B04CE2 		sub	fp, ip, #4
 2277              		.cfi_offset 14, -8
 2278              		.cfi_offset 13, -12
 2279              		.cfi_offset 11, -16
 2280              	.LCFI11:
 2281              		.cfi_def_cfa 11, 4
  86:../main.c     **** 
  87:../main.c     ****     sys_init();     		/* Inicializacion de la placa, interrupciones, puertos y UART */
 2282              		.loc 1 87 0
 2283 02a8 FEFFFFEB 		bl	sys_init
  88:../main.c     ****     init_keyboard(); 	    /* Inicializacion de EINT6/7 y del puerto G */
 2284              		.loc 1 88 0
 2285 02ac FEFFFFEB 		bl	init_keyboard
  89:../main.c     **** 	TIMER_init();	   		// Inicializacion del temporizador
 2286              		.loc 1 89 0
 2287 02b0 FEFFFFEB 		bl	TIMER_init
  90:../main.c     **** 	Uart_Init(115200);
 2288              		.loc 1 90 0
 2289 02b4 18009FE5 		ldr	r0, .L26
 2290 02b8 FEFFFFEB 		bl	Uart_Init
  91:../main.c     **** 
  92:../main.c     **** 	guardaClave();
 2291              		.loc 1 92 0
 2292 02bc FEFFFFEB 		bl	guardaClave
  93:../main.c     **** 	muestraClave();
 2293              		.loc 1 93 0
 2294 02c0 FEFFFFEB 		bl	muestraClave
 2295              	.L25:
  94:../main.c     **** 
  95:../main.c     **** 	while(1){
  96:../main.c     **** 		leeIntento();
 2296              		.loc 1 96 0 discriminator 1
 2297 02c4 FEFFFFEB 		bl	leeIntento
  97:../main.c     **** 		muestraIntento();
 2298              		.loc 1 97 0 discriminator 1
 2299 02c8 FEFFFFEB 		bl	muestraIntento
  98:../main.c     **** 		compruebaAcierto();
 2300              		.loc 1 98 0 discriminator 1
 2301 02cc FEFFFFEB 		bl	compruebaAcierto
  99:../main.c     **** 	}
 2302              		.loc 1 99 0 discriminator 1
 2303 02d0 FBFFFFEA 		b	.L25
 2304              	.L27:
 2305              		.align	2
 2306              	.L26:
 2307 02d4 00C20100 		.word	115200
 2308              		.cfi_endproc
 2309              	.LFE5:
 2311              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1913   .data:00000000 symbol
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1910   .data:00000000 $d
                            *COM*:00000001 inte
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1917   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1920   .text:00000000 guardaClave
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1963   .text:00000050 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1970   .rodata:00000000 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1974   .text:0000005c $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:1977   .text:0000005c muestraClave
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2027   .text:000000c0 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2033   .text:000000cc $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2036   .text:000000cc leeIntento
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2104   .text:00000168 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2109   .text:00000170 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2112   .text:00000170 muestraIntento
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2167   .text:000001e4 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2181   .text:000001f0 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2184   .text:000001f0 compruebaAcierto
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2255   .text:0000028c $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2262   .text:0000029c $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2265   .text:0000029c main
C:\Users\USUARI~1\AppData\Local\Temp\cc7UKngx.s:2307   .text:000002d4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
D8Led_symbol
key
modoTimer
Uart_Printf
cuentaClave
resetIntento
Uart_Getch
insertarIntento
cuentaIntento
posicion
comparar
cuentaAcierto
sys_init
init_keyboard
TIMER_init
Uart_Init

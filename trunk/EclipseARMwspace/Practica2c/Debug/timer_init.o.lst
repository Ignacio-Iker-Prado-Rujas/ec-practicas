   1              	# 1 "../timer_init.asm"
   1              	.global TIMER_init
   0              	
   0              	
   0              	
   2              	
   3              	.extern timer_ISR
   4              	
   5              	.equ rI_ISPC, 0x1e00024
   6              	.equ rEXTINTPND, 0x1d20054
   7              	.equ rEXTINT, 0x1d20050
   8              	.equ rINTMOD, 0x1e00008
   9              	.equ rINTCON, 0x1e00000
  10              	.equ rINTMSK, 0x1e0000c
  11              	.equ BIT_GLOBAL, (0x1<<26)
  12              	.equ BIT_EINT4567, (0x1<<21)
  13              	.equ rPCONG, 0x1d20040
  14              	.equ rPUPG, 0x1d20048
  15              	.equ pISR_TIMER0, 0xc7fff54
  16              	
  17              	.equ rTCFG0, 0x1d50000
  18              	.equ rTCFG1, 0x1d50004
  19              	.equ rTCNTB0, 0x1d5000c
  20              	.equ rTCMPB0, 0x1d50010
  21              	.equ rTCON, 0x1d50008
  22              	
  23              	.equ BorraIspc, 0xFFFFFFFF;
  24              	.equ BorraExtint, 0xf;
  25              	.equ ConfigIntmod, 0x0;
  26              	.equ Pines, 0xffff;
  27              	.equ FlancoBajada, 0x22222222;
  28              	.equ BitsTimer, 0xFBFFDFFF;
  29              	
  30              	.equ Constante, 65535;
  31              	
  32              	TIMER_init:
  33              		/* Configuracion del controlador de interrupciones */
  34              	
  35              	/*TAREA 2b*/
  36              		/* Configuraion controlador de interrupciones */
  37              		@rINTMOD=0x0; // Configura las linas como de tipo IRQ
  38              	
  39 0000 0000A0E3 		ldr r0, =ConfigIntmod;
  40 0004 78109FE5 		ldr r1, =rINTMOD;
  41 0008 000081E5 		str r0,[r1]
  42              	
  43              		@rINTCON  =0x1;  // Habilita int. vectorizadas y la linea IRQ (FIQ no)
  44              	
  45 000c 0100A0E3 		mov r0, #1;
  46 0010 1E16A0E3 		ldr r1, =rINTCON;
  47 0014 000081E5 		str r0,[r1]
  48              	
  49              		@rINTMSK &= ~(BIT_GLOBAL|BIT_TIMER0);  // habilita Timer0 y el bit global
  50              	
  51 0018 68309FE5 		ldr r3, =rINTMSK;
  52 001c 000093E5 		ldr r0, [r3];
  53 0020 64109FE5 		ldr r1, =BitsTimer
  54 0024 012000E0 		and r2, r0, r1;
  55              	
  56 0028 002083E5 		str r2, [r3];
  57              	
  58              		/* Establece la rutina de servicio para TIMER0 */
  59              		@pISR_TIMER0=(unsigned)timer_ISR;
  60              	
  61 002c 5C009FE5 		ldr r0, =timer_ISR;
  62 0030 5C109FE5 	    ldr r1, =pISR_TIMER0;
  63 0034 000081E5 		str r0, [r1];
  64              	
  65              	/*fin TAREA 2b*/
  66              	
  67              		/* Configura el Timer0 */
  68              	    @rTCFG0 = 255;
  69              	
  70 0038 FF00A0E3 	    mov r0, #255;
  71 003c 54109FE5 		ldr r1, =rTCFG0;
  72 0040 000081E5 		str r0,[r1];
  73              	
  74              	    @rTCFG1 = 0x0;
  75 0044 0000A0E3 	    mov r0, #0;
  76 0048 4C109FE5 		ldr r1, =rTCFG1;
  77 004c 000081E5 		str r0,[r1];
  78              	
  79              	    @rTCNTB0 = 65535;
  80 0050 48009FE5 	    ldr r0, =Constante
  81 0054 48109FE5 		ldr r1, =rTCNTB0;
  82 0058 000081E5 		str r0,[r1];
  83              	
  84              	    @rTCMPB0 = 12800;
  85              	
  86 005c 320CA0E3 	    mov r0, #12800;
  87 0060 40109FE5 		ldr r1, =rTCMPB0;
  88 0064 000081E5 		str r0,[r1];
  89              	
  90              	    /* establecer update=manual + inverter=on */
  91              		@rTCON = 0x2;
  92              	
  93 0068 0200A0E3 	    mov r0, #0x2;
  94 006c 38109FE5 		ldr r1, =rTCON;
  95 0070 000081E5 		str r0,[r1];
  96              		/* inicial timer con auto-reload */
  97              	
  98              	    @rTCON  = 0x09;
  99              	
 100 0074 0900A0E3 	    mov r0, #0x09;
 101 0078 2C109FE5 		ldr r1, =rTCON;
 102 007c 000081E5 		str r0,[r1];
 103              	
 104 0080 0EF0A0E1 		mov pc,lr
 104      0800E001 
 104      0C00E001 
 104      FFDFFFFB 
 104      00000000 
DEFINED SYMBOLS
   ../timer_init.asm:32     .text:00000000 TIMER_init
   ../timer_init.asm:5      *ABS*:01e00024 rI_ISPC
   ../timer_init.asm:6      *ABS*:01d20054 rEXTINTPND
   ../timer_init.asm:7      *ABS*:01d20050 rEXTINT
   ../timer_init.asm:8      *ABS*:01e00008 rINTMOD
   ../timer_init.asm:9      *ABS*:01e00000 rINTCON
   ../timer_init.asm:10     *ABS*:01e0000c rINTMSK
   ../timer_init.asm:11     *ABS*:04000000 BIT_GLOBAL
   ../timer_init.asm:12     *ABS*:00200000 BIT_EINT4567
   ../timer_init.asm:13     *ABS*:01d20040 rPCONG
   ../timer_init.asm:14     *ABS*:01d20048 rPUPG
   ../timer_init.asm:15     *ABS*:0c7fff54 pISR_TIMER0
   ../timer_init.asm:17     *ABS*:01d50000 rTCFG0
   ../timer_init.asm:18     *ABS*:01d50004 rTCFG1
   ../timer_init.asm:19     *ABS*:01d5000c rTCNTB0
   ../timer_init.asm:20     *ABS*:01d50010 rTCMPB0
   ../timer_init.asm:21     *ABS*:01d50008 rTCON
   ../timer_init.asm:23     *ABS*:ffffffff BorraIspc
   ../timer_init.asm:24     *ABS*:0000000f BorraExtint
   ../timer_init.asm:25     *ABS*:00000000 ConfigIntmod
   ../timer_init.asm:26     *ABS*:0000ffff Pines
   ../timer_init.asm:27     *ABS*:22222222 FlancoBajada
   ../timer_init.asm:28     *ABS*:fbffdfff BitsTimer
   ../timer_init.asm:30     *ABS*:0000ffff Constante
   ../timer_init.asm:39     .text:00000000 $a
   ../timer_init.asm:104    .text:00000084 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
timer_ISR
